#
# X86_64_LINT -- config file for checking all the sources, tries to pull in
#	as much of the source tree as it can.
#
# $FreeBSD: src/sys/i386/conf/LINT,v 1.749.2.144 2003/06/04 17:56:59 sam Exp $
#
# See the kernconf(5) manual page for more information on the format of
# this file.
#
# NB: You probably don't want to try running a kernel built from this
# file.  Instead, you should start from X86_64_GENERIC, and add options
# from this file as required.
#

# These directives are mandatory.  The machine directive specifies the
# platform and the machine_arch directive specifies the cpu architecture.
#
platform	pc64
machine		x86_64
machine_arch	x86_64

#
# This is the ``identification'' of the kernel.  Usually this should
# be the same as the name of your kernel.
#
ident		X86_64_LINT

#
# The `maxusers' parameter controls the static sizing of a number of
# internal system tables by a formula defined in subr_param.c.  Setting
# maxusers to 0 will cause the system to auto-size based on physical
# memory.
#
maxusers	10

#
# The `makeoptions' parameter allows variables to be passed to the
# generated Makefile in the build area.
#
# CONF_CFLAGS gives some extra compiler flags that are added to ${CFLAGS}
# after most other flags.  Here we use it to inhibit use of non-optimal
# gcc builtin functions (e.g., memcmp).
#
# DEBUG happens to be magic.
# The following is equivalent to 'config -g KERNELNAME' and creates
# 'kernel.debug' compiled with -g debugging as well as a normal
# 'kernel'.  Use 'make install.debug' to install the debug kernel
# but that isn't normally necessary as the debug symbols are not loaded
# by the kernel and are not useful there anyway.
#
# KERNEL can be overridden so that you can change the default name of your
# kernel.
#
# MODULES_OVERRIDE can be used to limit modules built to a specific list.
#
# INSTALLSTRIPPED can be set to cause installkernel to install stripped
# kernels and modules rather than a kernel and modules with debug symbols.
#
# INSTALLSTRIPPEDMODULES can be set to allow a full debug kernel to be
# installed, but to strip the installed modules.
#
makeoptions	CONF_CFLAGS=-fno-builtin  #Don't allow use of memcmp, etc.
#makeoptions	DEBUG=-g		#Build kernel with gdb(1) debug symbols
#makeoptions	KERNEL=foo		#Build kernel "foo" and install "/foo"
# Only build Linux API modules and plus those parts of the sound system I need.
#makeoptions	MODULES_OVERRIDE="linux sound/snd sound/pcm sound/driver/maestro3"
#makeoptions	INSTALLSTRIPPED=1
#makeoptions	INSTALLSTRIPPEDMODULES=1

#
# Certain applications can grow to be larger than the 128M limit
# that DragonFly initially imposes.  Below are some options to
# allow that limit to grow to 256MB, and can be increased further
# with changing the parameters.  MAXDSIZ is the maximum that the
# limit can be set to, and the DFLDSIZ is the default value for
# the limit.  MAXSSIZ is the maximum that the stack limit can be
# set to.  You might want to set the default lower than the max,
# and explicitly set the maximum with a shell command for processes
# that regularly exceed the limit like INND.
#
options 	MAXDSIZ="(256*1024*1024)"
options 	MAXSSIZ="(256*1024*1024)"
options 	DFLDSIZ="(256*1024*1024)"

#
# BLKDEV_IOSIZE sets the default block size used in user block
# device I/O.  Note that this value will be overridden by the label
# when specifying a block device from a label with a non-0
# partition blocksize.  The default is PAGE_SIZE.
#
options 	BLKDEV_IOSIZE=8192

# This allows you to actually store this configuration file into
# the kernel binary itself, where it may be later read by saying:
#    strings -n 3 /kernel | sed -n 's/^___//p' > MYKERNEL
#
options 	INCLUDE_CONFIG_FILE     # Include this file in kernel

#
# The root device and filesystem type can be compiled in;
# this provides a fallback option if the root device cannot
# be correctly guessed by the bootstrap code, or an override if
# the RB_DFLTROOT flag (-r) is specified when booting the kernel.
#
options 	ROOTDEVNAME=\"ufs:da0s2e\"

#####################################################################
# SMP OPTIONS:
#
# SMP enables building of a Symmetric MultiProcessor Kernel. It will
# boot on both SMP and UP boxes.
#
# Notes:
#
#  An SMP kernel will ONLY run on an Intel MP spec. qualified motherboard.
#
#  Check the 'Rogue SMP hardware' section to see if additional options
#   are required by your hardware.
#
#options 	SMP			# Symmetric MultiProcessor Kernel

#####################################################################
# CPU OPTIONS

cpu		HAMMER_CPU

#
# Options for CPU features.
#
# CPU_AMD64X2_INTR_SPAM tries to route HyperTransport EXTINT and NMI
# messages to LINT0 on the local APIC when the BIOS has forgotten to
# do that.  If this is not done on a multi-core cpu, EXTINT and NMI
# get routed to the INTR/NMI pins on *BOTH* cores simultaneously, causing
# two INTA ack cycles one of which will almost certainly result in a
# spurious interrupt vector being presented.  This is often visible as
# an unmaskable IRQ 7 which occurs for every normal interrupt that occurs
# on a system.
#
# CPU_DISABLE_SSE disables SSE/MMX2 instructions support.
#
# CPU_ENABLE_EST enables support for Enhanced SpeedStep technology
# found in Pentium(tm) M processors.
#
options		CPU_AMD64X2_INTR_SPAM
#options 	CPU_DISABLE_SSE
options		CPU_ENABLE_EST

#####################################################################
# COMPATIBILITY OPTIONS

#
# Implement system calls compatible with 4.3BSD and older versions of
# FreeBSD.  You probably do NOT want to remove this as much current code
# still relies on the 4.3 emulation.
#
options 	COMPAT_43

# Enable NDIS binary driver support
options 	NDISAPI
device		ndis

#
# These three options provide support for System V Interface
# Definition-style interprocess communication, in the form of shared
# memory, semaphores, and message queues, respectively.
#
# System V shared memory and tunable parameters
options 	SYSVSHM		# include support for shared memory
options 	SHMMAXPGS=1025	# max amount of shared memory pages (4k on i386)
options 	SHMALL=1025	# max amount of shared memory (bytes)
options 	SHMMAX="(SHMMAXPGS*PAGE_SIZE+1)"
				# max shared memory segment size (bytes)
options 	SHMMIN=2	# min shared memory segment size (bytes)
options 	SHMMNI=33	# max number of shared memory identifiers
options 	SHMSEG=9	# max shared memory segments per process

# System V semaphores and tunable parameters
options 	SYSVSEM		# include support for semaphores
options 	SEMMAP=31	# amount of entries in semaphore map
options 	SEMMNI=11	# number of semaphore identifiers in the system
options 	SEMMNS=61	# number of semaphores in the system
options 	SEMMNU=31	# number of undo structures in the system
options 	SEMMSL=61	# max number of semaphores per id
options 	SEMOPM=101	# max number of operations per semop call
options 	SEMUME=11	# max number of undo entries per process

# System V message queues and tunable parameters
options 	SYSVMSG		# include support for message queues
options 	MSGMNB=2049	# max characters per message queue
options 	MSGMNI=41	# max number of message queue identifiers
options 	MSGSEG=2049	# max number of message segments in the system
options 	MSGSSZ=16	# size of a message segment MUST be power of 2
options 	MSGTQL=41	# max amount of messages in the system

#####################################################################
# DEBUGGING OPTIONS

#
# Enable the kernel debugger.
#
options 	DDB

#
# Print a stack trace on kernel panic.
#
options 	DDB_TRACE

#
# Don't drop into DDB for a panic. Intended for unattended operation
# where you may want to drop to DDB from the console, but still want
# the machine to recover from a panic
#
options 	DDB_UNATTENDED

#
# If using GDB remote mode to debug the kernel, there's a non-standard
# extension to the remote protocol that can be used to use the serial
# port as both the debugging port and the system console.  It's non-
# standard and you're on your own if you enable it.  See also the
# "remotechat" variables in the DragonFly specific version of gdb.
#
options 	GDB_REMOTE_CHAT

#
# KTRACE enables the system-call tracing facility ktrace(2).
#
options 	KTRACE			#kernel tracing

#
# The INVARIANTS option is used in a number of source files to enable
# extra sanity checking of internal structures.  This support is not
# enabled by default because of the extra time it would take to check
# for these conditions, which can only occur as a result of
# programming errors.
#
options 	INVARIANTS

#
# The DIAGNOSTIC option is used to enable extra debugging information
# from some parts of the kernel.  As this makes everything more noisy,
# it is disabled by default.
#
options 	DIAGNOSTIC

#
# PERFMON causes the driver for Pentium/Pentium Pro performance counters
# to be compiled.  See perfmon(4) for more information.
#
options 	PERFMON


#
# This option let some drivers co-exist that can't co-exist in a running
# system.  This is used to be able to compile all kernel code in one go for
# quality assurance purposes (like this file, which the option takes it name
# from.)
#
options 	COMPILING_LINT


# XXX - this doesn't belong here.
# Allow ordinary users to take the console - this is useful for X.
options 	UCONSOLE

#####################################################################
# NETWORKING OPTIONS

#
# Protocol families:
#  Only the INET (Internet) family is officially supported in DragonFly.
#  Source code for the NS (Xerox Network Service) is provided for amusement
#  value.
#
options 	INET			#Internet communications protocols
options 	INET6			#IPv6 communications protocols
options 	IPSEC			#IP security
options 	IPSEC_ESP		#IP security (crypto; define w/ IPSEC)
options 	IPSEC_DEBUG		#debug for IP security
#
# Set IPSEC_FILTERGIF to force packets coming through a gif tunnel
# to be processed by any configured packet filtering (ipfw, ipf).
# The default is that packets coming from a tunnel are _not_ processed;
# they are assumed trusted.
#
# Note that enabling this can be problematic as there are no mechanisms
# in place for distinguishing packets coming out of a tunnel (e.g. no
# encX devices as found on openbsd).
#
#options 	IPSEC_FILTERGIF		#filter ipsec packets from a tunnel

#
# Experimental IPsec implementation that uses the kernel crypto
# framework.  This cannot be configured together with IPSEC and
# (currently) supports only IPv4.  To use this you must also
# configure the crypto device (see below).  Note that with this
# you get all the IPsec protocols (e.g. there is no FAST_IPSEC_ESP).
# IPSEC_DEBUG is used, as above, to configure debugging support
# within the IPsec protocols.
#
#options 	FAST_IPSEC		#new IPsec

options 	IPX			#IPX/SPX communications protocols
options 	IPXIP			#IPX in IP encapsulation (not available)
options 	IPTUNNEL		#IP in IPX encapsulation (not available)

options 	NCP			#NetWare Core protocol

options 	MPLS			#Multi-Protocol Label Switching

#
# SMB/CIFS requester
# NETSMB enables support for SMB protocol, it requires LIBMCHAIN and LIBICONV
# options.
# NETSMBCRYPTO enables support for encrypted passwords.
options 	NETSMB			#SMB/CIFS requester
options 	NETSMBCRYPTO		#encrypted password support for SMB

# mchain library. It can be either loaded as KLD or compiled into kernel
options 	LIBMCHAIN		#mbuf management library

# netgraph(4). Enable the base netgraph code with the NETGRAPH option.
# Individual node types can be enabled with the corresponding option
# listed below; however, this is not strictly necessary as netgraph
# will automatically load the corresponding KLD module if the node type
# is not already compiled into the kernel. Each type below has a
# corresponding man page, e.g., ng_async(4).
options 	NETGRAPH		#netgraph(4) system
options 	NETGRAPH_ASYNC
options 	NETGRAPH_BPF
options 	NETGRAPH_BRIDGE
options 	NETGRAPH_CISCO
options 	NETGRAPH_ECHO
options		NETGRAPH_EIFACE
options 	NETGRAPH_ETHER
options 	NETGRAPH_FRAME_RELAY
options 	NETGRAPH_HOLE
options 	NETGRAPH_IFACE
options 	NETGRAPH_KSOCKET
options 	NETGRAPH_L2TP
options 	NETGRAPH_LMI
# MPPC compression requires proprietary files (not included)
#options 	NETGRAPH_MPPC_COMPRESSION
options 	NETGRAPH_MPPC_ENCRYPTION
options 	NETGRAPH_ONE2MANY
options 	NETGRAPH_PPP
options 	NETGRAPH_PPPOE
options 	NETGRAPH_PPTPGRE
options 	NETGRAPH_RFC1490
options 	NETGRAPH_SOCKET
options 	NETGRAPH_TEE
options 	NETGRAPH_TTY
options 	NETGRAPH_UI
options 	NETGRAPH_VJC

device		mn	# Munich32x/Falc54 Nx64kbit/sec cards.

#
# Network interfaces:
#  The `loop' pseudo-device is MANDATORY when networking is enabled.
#  The `ether' pseudo-device provides generic code to handle
#  Ethernets; it is MANDATORY when a Ethernet device driver is
#  configured.
#  The `sppp' pseudo-device serves a similar role for certain types
#  of synchronous PPP links (like `ar').
#  The `sl' pseudo-device implements the Serial Line IP (SLIP) service.
#  The `ppp' pseudo-device implements the Point-to-Point Protocol.
#  The `bpf' pseudo-device enables the Berkeley Packet Filter.  Be
#  aware of the legal and administrative consequences of enabling this
#  option.  The number of devices determines the maximum number of
#  simultaneous BPF clients programs runnable.
#  The `disc' pseudo-device implements a minimal network interface,
#  which throws away all packets sent and never receives any.  It is
#  included for testing purposes.  This shows up as the 'ds' interface.
#  The `tun' pseudo-device implements (user-)ppp and nos-tun
#  The `gif' pseudo-device implements IPv6 over IP4 tunneling,
#  IPv4 over IPv6 tunneling, IPv4 over IPv4 tunneling and
#  IPv6 over IPv6 tunneling.
#  The `gre' device implements two types of IP4 over IP4 tunneling:
#  GRE and MOBILE, as specified in the RFC1701 and RFC2004.
#  The `faith' pseudo-device captures packets sent to it and diverts them
#  to the IPv4/IPv6 translation daemon.
#  The `stf' device implements 6to4 encapsulation.
#  The `ef' pseudo-device provides support for multiple ethernet frame types
#  specified via ETHER_* options. See ef(4) for details.
#
# The PPP_BSDCOMP option enables support for compress(1) style entire
# packet compression, the PPP_DEFLATE is for zlib/gzip style compression.
# PPP_FILTER enables code for filtering the ppp data stream and selecting
# events for resetting the demand dial activity timer - requires bpf.
# See pppd(8) for more details.
#
pseudo-device	ether			#Generic Ethernet
pseudo-device	vlan	1		#VLAN support
pseudo-device	bridge			#Bridging support
pseudo-device	sppp			#Generic Synchronous PPP
pseudo-device	loop			#Network loopback device
pseudo-device	bpf			#Berkeley packet filter
pseudo-device	disc			#Discard device (ds0, ds1, etc)
pseudo-device	tun			#Tunnel driver (ppp(8), nos-tun(8))
pseudo-device	sl	2		#Serial Line IP
pseudo-device	gre			#IP over IP tunneling
pseudo-device	ppp	2		#Point-to-point protocol
options 	PPP_BSDCOMP		#PPP BSD-compress support
options 	PPP_DEFLATE		#PPP zlib/deflate/gzip support
options 	PPP_FILTER		#enable bpf filtering (needs bpf)

pseudo-device	ef			# Multiple ethernet frames support
options 	ETHER_II		# enable Ethernet_II frame
options 	ETHER_8023		# enable Ethernet_802.3 (Novell) frame
options 	ETHER_8022		# enable Ethernet_802.2 frame
options 	ETHER_SNAP		# enable Ethernet_802.2/SNAP frame

# for IPv6
pseudo-device	gif			#IPv6 and IPv4 tunneling
pseudo-device	faith	1		#for IPv6 and IPv4 translation
pseudo-device	stf			#6to4 IPv6 over IPv4 encapsulation

#
# Internet family options:
#
# MROUTING enables the kernel multicast packet forwarder, which works
# with mrouted(8).
#
# PIM enables Protocol Independent Multicast in the kernel.
# Requires MROUTING enabled.
#
# IPFIREWALL enables support for IP firewall construction, in
# conjunction with the `ipfw' program.  IPFIREWALL_VERBOSE sends
# logged packets to the system logger.  IPFIREWALL_VERBOSE_LIMIT
# limits the number of times a matching entry can be logged.
#
# WARNING:  IPFIREWALL defaults to a policy of "deny ip from any to any"
# and if you do not add other rules during startup to allow access,
# YOU WILL LOCK YOURSELF OUT.  It is suggested that you set firewall_type=open
# in /etc/rc.conf when first enabling this feature, then refining the
# firewall rules in /etc/rc.firewall after you've tested that the new kernel
# feature works properly.
#
# IPFIREWALL_DEFAULT_TO_ACCEPT causes the default rule (at boot) to
# allow everything.  Use with care, if a cracker can crash your
# firewall machine, they can get to your protected machines.  However,
# if you are using it as an as-needed filter for specific problems as
# they arise, then this may be for you.  Changing the default to 'allow'
# means that you won't get stuck if the kernel and /sbin/ipfw binary get
# out of sync.
#
# IPDIVERT enables the divert IP sockets, used by ``ipfw divert''
#
# IPSTEALTH enables code to support stealth forwarding (i.e., forwarding
# packets without touching the ttl).  This can be useful to hide firewalls
# from traceroute and similar tools.
#
# TCPDEBUG is undocumented.
#
options 	MROUTING		# Multicast routing
options 	PIM			# Protocol Independent Multicast
options 	IPFIREWALL		#firewall
options		IPFIREWALL_DEBUG	#debug prints
options 	IPFIREWALL_VERBOSE	#enable logging to syslogd(8)
options 	IPFIREWALL_FORWARD	#enable transparent proxy support
options 	IPFIREWALL_VERBOSE_LIMIT=100	#limit verbosity
options 	IPFIREWALL_DEFAULT_TO_ACCEPT	#allow everything by default
options 	IPV6FIREWALL		#firewall for IPv6
options 	IPV6FIREWALL_VERBOSE
options 	IPV6FIREWALL_VERBOSE_LIMIT=100
options 	IPV6FIREWALL_DEFAULT_TO_ACCEPT
options 	IPDIVERT		#divert sockets
options 	IPSTEALTH		#support for stealth forwarding
options 	TCPDEBUG

device		pf
device		pflog

#CARP
pseudo-device carp
options CARP

# The MBUF_STRESS_TEST option enables options which create
# various random failures / extreme cases related to mbuf
# functions.  See the mbuf(9) manpage for a list of available
# test cases.
options         MBUF_STRESS_TEST

# Statically link in accept filters
options                ACCEPT_FILTER_DATA
options                ACCEPT_FILTER_HTTP

# TCP_SIGNATURE adds support for RFC 2385 (TCP-MD5) digests. These are
# carried in TCP option 19. This option is commonly used to protect
# TCP sessions (e.g. BGP) where IPSEC is not available nor desirable.
# This is enabled on a per-socket basis using the TCP_MD5SIG socket option.
# This requires the use of 'device crypto', 'options IPSEC'
# or 'device cryptodev'.
options   TCP_SIGNATURE   #include support for RFC 2385

#
# TCP_DROP_SYNFIN adds support for ignoring TCP packets with SYN+FIN. This
# prevents nmap et al. from identifying the TCP/IP stack, but breaks support
# for RFC1644 extensions and is not recommended for web servers.
#
options 	TCP_DROP_SYNFIN		#drop TCP packets with SYN+FIN

# ICMP_BANDLIM enables icmp error response bandwidth limiting.   You
# typically want this option as it will help protect the machine from
# D.O.S. packet attacks.
#
options 	ICMP_BANDLIM

# DUMMYNET enables the "dummynet" bandwidth limiter. You need
# IPFIREWALL as well. See the dummynet(4) and ipfw(8) manpages for more info.
#
options 	DUMMYNET
options		DUMMYNET_DEBUG

#
# ATM (HARP version) options
#
# ATM_CORE includes the base ATM functionality code.  This must be included
#	for ATM support.
#
# ATM_IP includes support for running IP over ATM.
#
# At least one (and usually only one) of the following signalling managers
# must be included (note that all signalling managers include PVC support):
# ATM_SIGPVC includes support for the PVC-only signalling manager `sigpvc'.
# ATM_SPANS includes support for the `spans' signalling manager, which runs
#	the FORE Systems's proprietary SPANS signalling protocol.
# ATM_UNI includes support for the `uni30' and `uni31' signalling managers,
#	which run the ATM Forum UNI 3.x signalling protocols.
#
# The `hea' driver provides support for the Efficient Networks, Inc.
# ENI-155p ATM PCI Adapter.
#
# The `hfa' driver provides support for the FORE Systems, Inc.
# PCA-200E ATM PCI Adapter.
#
#options 	ATM_CORE		#core ATM protocol family
#options 	ATM_IP			#IP over ATM support
#options 	ATM_SIGPVC		#SIGPVC signalling manager
#options 	ATM_SPANS		#SPANS signalling manager
#options 	ATM_UNI			#UNI signalling manager
#device		hea			#Efficient ENI-155p ATM PCI
#device		hfa			#FORE PCA-200E ATM PCI

# DEVICE_POLLING adds support for mixed interrupt-polling handling
# of network device drivers, which has significant benefits in terms
# of robustness to overloads and responsivity, as well as permitting
# accurate scheduling of the CPU time between kernel network processing
# and other activities. The drawback is a moderate (up to 1/pollhz seconds)
# potential increase in response times. See polling(4) for further details.
#
options         DEVICE_POLLING

# IFPOLL_ENABLE adds hardware queues' based polling
options		IFPOLL_ENABLE

#####################################################################
# FILESYSTEM OPTIONS

#
# Only the root, /usr, and /tmp filesystems need be statically
# compiled; everything else will be automatically loaded at mount
# time.  (Exception: the UFS family --- FFS, and MFS ---
# cannot currently be demand-loaded.)  Some people still prefer
# to statically compile other filesystems as well.
#
# NB: The PORTAL and UNION filesystems are known to be
# buggy, and WILL panic your system if you attempt to do anything with
# them.  They are included here as an incentive for some enterprising
# soul to sit down and fix them.
#

# One of these is mandatory:
options 	FFS			#Fast filesystem
options 	MFS			#Memory filesystem
options 	NFS			#Network filesystem

# The rest are optional:
#options 	NFS_NOSERVER		#Disable the NFS-server code.
options 	CD9660			#ISO 9660 filesystem
options 	FDESC			#File descriptor filesystem
options		HAMMER			#HAMMER filesystem
options 	HPFS			#OS/2 File system
options 	MSDOSFS			#MS DOS filesystem
options 	NTFS			#NT filesystem
options 	NULLFS			#NULL filesystem
options 	NWFS			#NetWare filesystem
options 	PORTAL			#Portal filesystem
options 	PROCFS			#Process filesystem
options 	SMBFS			#SMB/CIFS filesystem
options 	TMPFS			#Temporary filesystem
options		UDF			#UDF filesystem

# YYY-DR Till we rework the VOP methods for this filesystem
#options 	UNION			#Union filesystem
# The xFS_ROOT options REQUIRE the associated ``options xFS''
options 	FFS_ROOT		#FFS usable as root device
options 	NFS_ROOT		#NFS usable as root device

# Soft updates is technique for improving UFS filesystem speed and
# making abrupt shutdown less risky.
options 	SOFTUPDATES

# Directory hashing improves the speed of operations on very large
# directories at the expense of some memory.
options 	UFS_DIRHASH

# Make space in the kernel for a root filesystem on a md device.
# Define to the number of kilobytes to reserve for the filesystem.
options 	MD_ROOT_SIZE=10

# Make the md device a potential root device, either with preloaded
# images of type mfs_root or md_root.
options 	MD_ROOT

# Specify double the default maximum size for malloc(9)-backed md devices.
options 	MD_NSECT=40000

# Allow this many swap-devices.
#
# In order to manage swap, the system must reserve bitmap space that
# scales with the largest mounted swap device multiplied by NSWAPDEV,
# regardless of whether other swap devices exist or not.  So it
# is not a good idea to make this value too large.
options 	NSWAPDEV=5

# Disk quotas are supported when this option is enabled.
options 	QUOTA			#enable disk quotas

# If you are running a machine just as a fileserver for PC and MAC
# users, e.g. using SAMBA, you may consider setting this option
# and keeping all those users' directories on a filesystem that is
# mounted with the suiddir option. This gives new files the same
# ownership as the directory (similar to group). It's a security hole
# if you let these users run programs, so confine it to file-servers
# (but it'll save you lots of headaches in those cases). Root owned
# directories are exempt and X bits are cleared. The suid bit must be
# set on the directory as well; see chmod(1) PC owners can't see/set
# ownerships so they keep getting their toes trodden on. This saves
# you all the support calls as the filesystem it's used on will act as
# they expect: "It's my dir so it must be my file".
#
options 	SUIDDIR

# NFS options:
options 	NFS_MINATTRTIMO=3	# VREG attrib cache timeout in sec
options 	NFS_MAXATTRTIMO=60
options 	NFS_MINDIRATTRTIMO=30	# VDIR attrib cache timeout in sec
options 	NFS_MAXDIRATTRTIMO=60
options 	NFS_GATHERDELAY=10	# Default write gather delay (msec)
options 	NFS_UIDHASHSIZ=29	# Tune the size of nfssvc_sock with this
options 	NFS_WDELAYHASHSIZ=16	# and with this
options 	NFS_MUIDHASHSIZ=63	# Tune the size of nfsmount with this
options 	NFS_DEBUG		# Enable NFS Debugging

# MSDOSFS options:
options		MSDOSFS_DEBUG		# Enable MSDOSFS Debugging

#
# Add support for the EXT2FS filesystem of Linux fame.  Be a bit
# careful with this - the ext2fs code has a tendency to lag behind
# changes and not be exercised very much, so mounting read/write could
# be dangerous (and even mounting read only could result in panics.)
#
options 	EXT2FS

# Optional character code conversion support with LIBICONV.
# Each option requires their base file system and LIBICONV.
options 	CD9660_ICONV
options 	MSDOSFS_ICONV
options 	NTFS_ICONV

#####################################################################
# POSIX P1003.1B

# Real time extensions added in the 1993 Posix
# P1003_1B: Infrastructure
# _KPOSIX_PRIORITY_SCHEDULING: Build in _POSIX_PRIORITY_SCHEDULING
# _KPOSIX_VERSION:             Version kernel is built for

options 	P1003_1B
options 	_KPOSIX_PRIORITY_SCHEDULING
options 	_KPOSIX_VERSION=199309L

#####################################################################
# CLOCK OPTIONS

# The granularity of operation is controlled by the kernel option HZ whose
# default value (100) means a granularity of 10ms (1s/HZ).
# Consider, however, that reducing the granularity too much might
# cause excessive overhead in clock interrupt processing,
# potentially causing ticks to be missed and thus actually reducing
# the accuracy of operation.

options 	HZ=100

# The following options are used for debugging clock behavior only, and
# should not be used for production systems.
#
# CLK_CALIBRATION_LOOP will run the clock calibration loop at startup
# until the user presses a key.

#options 	CLK_CALIBRATION_LOOP

# The following two options measure the frequency of the corresponding
# clock relative to the RTC (onboard mc146818a).

#options 	CLK_USE_I8254_CALIBRATION
#options 	CLK_USE_TSC_CALIBRATION

#####################################################################
# SCSI DEVICES

# SCSI DEVICE CONFIGURATION

# The SCSI subsystem consists of the `base' SCSI code, a number of
# high-level SCSI device `type' drivers, and the low-level host-adapter
# device drivers.  The host adapters are listed in the ISA and PCI
# device configuration sections below.
#
# Beginning with FreeBSD 2.0.5 you can wire down your SCSI devices so
# that a given bus, target, and LUN always come on line as the same
# device unit.  In earlier versions the unit numbers were assigned
# in the order that the devices were probed on the SCSI bus.  This
# means that if you removed a disk drive, you may have had to rewrite
# your /etc/fstab file, and also that you had to be careful when adding
# a new disk as it may have been probed earlier and moved your device
# configuration around.

# This old behavior is maintained as the default behavior.  The unit
# assignment begins with the first non-wired down unit for a device
# type.  For example, if you wire a disk as "da3" then the first
# non-wired disk will be assigned da4.

# The syntax for wiring down devices is:

# device	scbus0 at ahc0		# Single bus device
# device	scbus1 at ahc1 bus 0	# Single bus device
# device	scbus3 at ahc2 bus 0	# Twin bus device
# device	scbus2 at ahc2 bus 1	# Twin bus device
# device 	da0 at scbus0 target 0 unit 0
# device	da1 at scbus3 target 1
# device	da2 at scbus2 target 3
# device	sa1 at scbus1 target 6
# device	cd

# "units" (SCSI logical unit number) that are not specified are
# treated as if specified as LUN 0.

# All SCSI devices allocate as many units as are required.

# The "unknown" device (uk? in pre-2.0.5) is now part of the base SCSI
# configuration and doesn't have to be explicitly configured.

device		scbus			#base SCSI code
device		ch			#SCSI media changers
device		da			#SCSI direct access devices (aka disks)
device		sa			#SCSI tapes
device		cd			#SCSI CD-ROMs
device		pass			#CAM passthrough driver
device		sg			#Passthrough device (linux scsi generic)
device		pt			#SCSI processor type
device		ses			#SCSI SES/SAF-TE driver

# Options for device mapper
device		dm
device		dm_target_crypt
device		dm_target_linear
device		dm_target_striped

# Options for iSCSI
device	        iscsi_initiator
options		ISCSI_INITIATOR_DEBUG=8

# CAM OPTIONS:
# debugging options:
# -- NOTE --  If you specify one of the bus/target/lun options, you must
#             specify them all!
# CAMDEBUG: When defined enables debugging macros
# CAM_DEBUG_BUS:  Debug the given bus.  Use -1 to debug all busses.
# CAM_DEBUG_TARGET:  Debug the given target.  Use -1 to debug all targets.
# CAM_DEBUG_LUN:  Debug the given lun.  Use -1 to debug all luns.
# CAM_DEBUG_FLAGS:  OR together CAM_DEBUG_INFO, CAM_DEBUG_TRACE,
#                   CAM_DEBUG_SUBTRACE, and CAM_DEBUG_CDB
#
# CAM_MAX_HIGHPOWER: Maximum number of concurrent high power (start unit) cmds
# SCSI_NO_SENSE_STRINGS: When defined disables sense descriptions
# SCSI_NO_OP_STRINGS: When defined disables opcode descriptions
# SCSI_DELAY: The number of MILLISECONDS to freeze the SIM (scsi adapter)
#             queue after a bus reset, and the number of milliseconds to
#             freeze the device queue after a bus device reset.  This
#             can be changed at boot and runtime with the
#             kern.cam.scsi_delay tunable/sysctl.
options 	CAMDEBUG
options 	CAM_DEBUG_BUS=-1
options 	CAM_DEBUG_TARGET=-1
options 	CAM_DEBUG_LUN=-1
options 	CAM_DEBUG_FLAGS="CAM_DEBUG_INFO|CAM_DEBUG_TRACE|CAM_DEBUG_CDB"
options 	CAM_MAX_HIGHPOWER=4
options 	SCSI_NO_SENSE_STRINGS
options 	SCSI_NO_OP_STRINGS
options 	SCSI_DELAY=8000	# Be pessimistic about Joe SCSI device

# Options for the CAM CDROM driver:
# CHANGER_MIN_BUSY_SECONDS: Guaranteed minimum time quantum for a changer LUN
# CHANGER_MAX_BUSY_SECONDS: Maximum time quantum per changer LUN, only
#                           enforced if there is I/O waiting for another LUN
# The compiled in defaults for these variables are 2 and 10 seconds,
# respectively.
#
# These can also be changed on the fly with the following sysctl variables:
# kern.cam.cd.changer.min_busy_seconds
# kern.cam.cd.changer.max_busy_seconds
#
options 	CHANGER_MIN_BUSY_SECONDS=2
options 	CHANGER_MAX_BUSY_SECONDS=10

# Options for the CAM sequential access driver:
# SA_IO_TIMEOUT: Timeout for read/write/wfm  operations, in minutes
# SA_SPACE_TIMEOUT: Timeout for space operations, in minutes
# SA_REWIND_TIMEOUT: Timeout for rewind operations, in minutes
# SA_ERASE_TIMEOUT: Timeout for erase operations, in minutes
# SA_1FM_AT_EOD: Default to model which only has a default one filemark at EOT.
options 	SA_IO_TIMEOUT="(4)"
options 	SA_SPACE_TIMEOUT="(60)"
options 	SA_REWIND_TIMEOUT="(2*60)"
options 	SA_ERASE_TIMEOUT="(4*60)"
options 	SA_1FM_AT_EOD

# Optional timeout for the CAM processor target (pt) device
# This is specified in seconds.  The default is 60 seconds.
options 	SCSI_PT_DEFAULT_TIMEOUT="60"

# Optional enable of doing SES passthrough on other devices (e.g., disks)
#
# Normally disabled because a lot of newer SCSI disks report themselves
# as having SES capabilities, but this can then clot up attempts to build
# build a topology with the SES device that's on the box these drives
# are in....
options 	SES_ENABLE_PASSTHROUGH

#####################################################################
# MISCELLANEOUS DEVICES AND OPTIONS

# The `pty' device usually turns out to be ``effectively mandatory'',
# as it is required for `telnetd', `rlogind', `screen', `emacs', and
# `xterm', among others.

pseudo-device	pty		#Pseudo ttys
pseudo-device	gzip		#Exec gzipped a.out's
pseudo-device	vn		#Vnode driver (turns a file into a device)
pseudo-device	md		#Memory/malloc disk
pseudo-device	snp		#Snoop device - to look at pty/vty/etc..
pseudo-device	ccd	4	#Concatenated disk driver

# Configuring Vinum into the kernel is not necessary, since the kld
# module gets started automatically when vinum(8) starts.  This
# device is also untested.  Use at your own risk.
#
# The option VINUMDEBUG must match the value set in CFLAGS
# in src/sbin/vinum/Makefile.  Failure to do so will result in
# the following message from vinum(8):
#
# Can't get vinum config: Invalid argument
#
# see vinum(4) for more reasons not to use these options.
pseudo-device	vinum		#Vinum concat/mirror/raid driver
#options 	VINUMDEBUG	#enable Vinum debugging hooks

# Kernel side iconv library
options 	LIBICONV

# Size of the kernel message buffer.  Should be N * pagesize.
options 	MSGBUF_SIZE=40960

#####################################################################
# HARDWARE DEVICE CONFIGURATION

# ISA devices:

#
# Mandatory ISA devices: isa
#
device		isa

#
# Options for `isa':
#
# AUTO_EOI_1 enables the `automatic EOI' feature for the master 8259A
# interrupt controller.  This saves about 0.7-1.25 usec for each interrupt.
# This option breaks suspend/resume on some portables.
#
# AUTO_EOI_2 enables the `automatic EOI' feature for the slave 8259A
# interrupt controller.  This saves about 0.7-1.25 usec for each interrupt.
# Automatic EOI is documented not to work for for the slave with the
# original i8259A, but it works for some clones and some integrated
# versions.
#
# MAXMEM specifies the amount of RAM on the machine; if this is not
# specified, DragonFly will first read the amount of memory from the CMOS
# RAM, so the amount of memory will initially be limited to 64MB or 16MB
# depending on the BIOS.  If the BIOS reports 64MB, a memory probe will
# then attempt to detect the installed amount of RAM.  If this probe
# fails to detect >64MB RAM you will have to use the MAXMEM option.
# The amount is in kilobytes, so for a machine with 128MB of RAM, it would
# be 131072 (128 * 1024).
#
# BROKEN_KEYBOARD_RESET disables the use of the keyboard controller to
# reset the CPU for reboot.  This is needed on some systems with broken
# keyboard controllers.

options 	AUTO_EOI_1
#options 	AUTO_EOI_2
options 	MAXMEM="(128*1024)"
#options 	BROKEN_KEYBOARD_RESET

# Enable support for the kernel PLL to use an external PPS signal,
# under supervision of [x]ntpd(8)
# More info in ntpd documentation: http://www.eecis.udel.edu/~ntp

options 	PPS_SYNC

# The keyboard controller; it controls the keyboard and the PS/2 mouse.
device		atkbdc0	at isa? port IO_KBD

# The AT keyboard
device		atkbd0	at atkbdc? irq 1

# Options for atkbd:
options 	ATKBD_DFLT_KEYMAP	# specify the built-in keymap
makeoptions	ATKBD_DFLT_KEYMAP="jp.106"

# These options are valid for other keyboard drivers as well.
options 	KBD_DISABLE_KEYMAP_LOAD	# refuse to load a keymap
options 	KBD_INSTALL_CDEV	# install a CDEV entry in /dev

# `flags' for atkbd:
#       0x01    Force detection of keyboard, else we always assume a keyboard
#       0x02    Don't reset keyboard, useful for some newer ThinkPads
#	0x03	Force detection and avoid reset, might help with certain
#		dockingstations
#       0x04    Old-style (XT) keyboard support, useful for older ThinkPads

# PS/2 mouse
device		psm0	at atkbdc? irq 12

# Options for psm:
options 	PSM_HOOKRESUME		#hook the system resume event, useful
					#for some laptops
options 	PSM_RESETAFTERSUSPEND	#reset the device at the resume event

device		kbdmux			# keyboard multiplexer

# The video card driver.
device		vga0	at isa?

# Options for vga:
# Try the following option if the mouse pointer is not drawn correctly
# or font does not seem to be loaded properly.  May cause flicker on
# some systems.
options 	VGA_ALT_SEQACCESS

options		VGA_DEBUG=2		# enable VGA debug output

# If you experience problems switching back to 80x25 (or a derived mode),
# the following option might help.
#options	VGA_KEEP_POWERON_MODE	# use power-on settings for 80x25

# If you can dispense with some vga driver features, you may want to
# use the following options to save some memory.
#options 	VGA_NO_FONT_LOADING	# don't save/load font
#options 	VGA_NO_MODE_CHANGE	# don't change video modes

# The following option probably won't work with the LCD displays.
options 	VGA_WIDTH90		# support 90 column modes

# Splash screen at start up!  Screen savers require this too.
pseudo-device	splash

# The syscons console driver (sco color console compatible).
device		sc0	at isa?
options 	MAXCONS=16		# number of virtual consoles
options 	SC_ALT_MOUSE_IMAGE	# simplified mouse cursor in text mode
options 	SC_DEBUG_LEVEL=5	# enable debug output
options 	SC_DFLT_FONT		# compile font in
makeoptions	SC_DFLT_FONT=cp850
options 	SC_DISABLE_DDBKEY	# disable `debug' key
options 	SC_DISABLE_REBOOT	# disable reboot key sequence
options 	SC_HISTORY_SIZE=200	# number of history buffer lines
options 	SC_MOUSE_CHAR=0x3	# char code for text mode mouse cursor
options 	SC_PIXEL_MODE		# add support for the raster text mode

# The following options will let you change the default colors of syscons.
options 	SC_NORM_ATTR="(FG_GREEN|BG_BLACK)"
options 	SC_NORM_REV_ATTR="(FG_YELLOW|BG_GREEN)"
options 	SC_KERNEL_CONS_ATTR="(FG_RED|BG_BLACK)"
options 	SC_KERNEL_CONS_REV_ATTR="(FG_BLACK|BG_RED)"

# If you have a two button mouse, you may want to add the following option
# to use the right button of the mouse to paste text.
options 	SC_TWOBUTTON_MOUSE

# You can selectively disable features in syscons.
#options 	SC_NO_CUTPASTE
#options 	SC_NO_FONT_LOADING
#options 	SC_NO_HISTORY
#options 	SC_NO_SYSMOUSE

#
# Optional ISA devices:
#

#
# SCSI host adapters: `aic' and `bt'
#
# adv: All Narrow SCSI bus AdvanSys controllers.
# adw: Second Generation AdvanSys controllers including the ADV940UW.
# ahc: Adaptec 274x/284x/294x
# aic: Adaptec 152x
# bt: Most Buslogic controllers
# ncv: NCR 53C500 based SCSI host adapters.
# nsp: Workbit Ninja SCSI-3 based PC Card SCSI host adapters.
# stg: TMC 18C30, 18C50 based ISA/PC Card SCSI host adapters.
#
# Note that the order is important in order for Buslogic cards to be
# probed correctly.
#

device		bt0	at isa? port IO_BT0
device		adv0	at isa?
device		adw
device		aic0	at isa?
device		ncv
device		nsp
device		stg0	at isa? port 0x140 irq 11

#
# Adaptec FSA RAID controllers, including integrated DELL controller,
# the Dell PERC 2/QC and the HP NetRAID-4M
#
device		aac
options		AAC_DEBUG
device		aacp	# SCSI Passthrough interface (optional, CAM required)

#
# Compaq Smart RAID, Mylex DAC960 and AMI MegaRAID controllers.  Only
# one entry is needed; the code will find and configure all supported
# controllers.
#
device		ida		# Compaq Smart RAID
device		mlx		# Mylex DAC960
device		amr		# AMI MegaRAID
device		amrp		# SCSI Passthrough interface (optional, CAM req.)
device		mfi		# LSI MegaRAID SAS
device		mfip		# LSI MegaRAID SAS passthrough, requires CAM
options 	MFI_DEBUG

#
# Areca RAID (CAM is required).
#
device		arcmsr		# Areca SATA II RAID

#
# Highpoint RocketRAID 182x.
device		hptmv

#
# Highpoint RocketRaid 3xxx series SATA RAID
device		hptiop

#
# 3ware ATA RAID
#
device		twe		# 3ware ATA RAID
device		twa		# 3ware 9000 series PATA/SATA RAID
options 	TWA_DEBUG=10	# enable debug messages
device		tws		# 3ware 9750 series SATA/SAS RAID

#
# Promise Supertrack SX6000
#
#device		pst

#
# IBM ServeRAID
#
device	ips

#
# The 'ATA' driver supports all ATA and ATAPI devices.
# You only need one "device ata" for it to find all
# PCI ATA/ATAPI devices on modern machines.
#device		ata
#device		atadisk		# ATA disk drives
#device		atapicd		# ATAPI CDROM drives
#device		atapifd		# ATAPI floppy drives
#device		atapist		# ATAPI tape drives
#device		atapicam	# emulate ATAPI devices as SCSI ditto via CAM
				# needs CAM to be present (scbus & pass)
# AHCI driver, this will override NATA for AHCI devices,
# both drivers may be included.
#
device		ahci

# SiI3124/3132 driver
#
device		sili

# The 'NATA' set of drivers are set to replace the previous ATA drivers,
# and this set of drivers is mutually exclusive with the old ones. This means,
# you can't have both at the same time!
device		nata
device		natadisk	# ATA disk drives
device		natapicd	# ATAPI CD/DVD drives
device		natapifd	# ATAPI floppy drives
device		natapist	# ATAPI tape drives
device		natapicam	# ATAPI CAM layer emulation
device		nataraid	# support for ATA software RAID controllers
device		natausb		# ATA-over-USB support

#The following options are valid on the ATA & NATA drivers:
#
# ATA_STATIC_ID:	controller numbering is static (like the old driver)
#			else the device numbers are dynamically allocated.
options 	ATA_STATIC_ID

#
# For older non-PCI systems, these are the lines to use:
#device		ata0	at isa? port IO_WD1 irq 14
#device		ata1	at isa? port IO_WD2 irq 15

#
# Standard floppy disk controllers: `fdc' and `fd'
#
#device		fdc0	at isa? port IO_FD1 irq 6 drq 2
#
# FDC_DEBUG enables floppy debugging.  Since the debug output is huge, you
# gotta turn it actually on by setting the variable fd_debug with DDB,
# however.
#options 	FDC_DEBUG

#device		fd0	at fdc0 drive 0
#device		fd1	at fdc0 drive 1

#
# Other standard PC hardware: `sio', etc.
#
# sio: serial ports (see sio(4))

device		sio0	at isa? port IO_COM1 flags 0x10 irq 4

#
# `flags' for serial drivers that support consoles (only for sio now):
#	0x10	enable console support for this unit.  The other console flags
#		are ignored unless this is set.  Enabling console support does
#		not make the unit the preferred console - boot with -h or set
#		the 0x20 flag for that.  Currently, at most one unit can have
#		console support; the first one (in config file order) with
#		this flag set is preferred.  Setting this flag for sio0 gives
#		the old behaviour.
#	0x20	force this unit to be the console (unless there is another
#		higher priority console).  This replaces the COMCONSOLE option.
#	0x40	reserve this unit for low level console operations.  Do not
#		access the device in any normal way.
#	0x80	use this port for serial line gdb support in ddb.
#
# PnP `flags' (set via userconfig using pnp x flags y)
#	0x1	disable probing of this device.  Used to prevent your modem
#		from being attached as a PnP modem.
#

# Options for serial drivers that support consoles (only for sio now):
options 	BREAK_TO_DEBUGGER	#a BREAK on a comconsole goes to
					#DDB, if available.
options 	CONSPEED=115200		# speed for serial console
					# (default 9600)

# Solaris implements a new BREAK which is initiated by a character
# sequence CR ~ ^b which is similar to a familiar pattern used on
# Sun servers by the Remote Console.
options 	ALT_BREAK_TO_DEBUGGER

# Options for sio:
options 	COM_ESP			#code for Hayes ESP
options 	COM_MULTIPORT		#code for some cards with shared IRQs

# Other flags for sio that aren't documented in the man page.
#	0x20000	enable hardware RTS/CTS and larger FIFOs.  Only works for
#		ST16650A-compatible UARTs.

#
# Network interfaces: `ed', `ep', `is', `lnc'
#
# cs: IBM Etherjet and other Crystal Semi CS89x0-based adapters
# ed: Western Digital and SMC 80xx; Novell NE1000 and NE2000; 3Com 3C503
# ep: 3Com 3C509
# ex: Intel EtherExpress Pro/10 and other i82595-based adapters
# fe: Fujitsu MB86960A/MB86965A Ethernet
# lnc: Lance/PCnet cards (Isolan, Novell NE2100, NE32-VL, AMD Am7990 & Am79C960)
# sbsh: Granch SBNI16 SHDSL modem PCI adapters
# wi: Lucent WaveLAN/IEEE 802.11 PCMCIA adapters. Note: this supports both
#     the PCMCIA and ISA cards: the ISA card is really a PCMCIA to ISA
#     bridge with a PCMCIA adapter plugged into it.
# an: Aironet 4500/4800 802.11 wireless adapters. Supports the PCMCIA,
#     PCI and ISA varieties.
# xe: Xircom/Intel EtherExpress Pro100/16 PC Card ethernet controller.
#
device cs0 at isa? port 0x300
device ed0 at isa? port 0x280 irq 5 iomem 0xd8000
device ep
device ex
device lnc0 at isa? port 0x280 irq 10 drq 0
device sln
device sn0 at isa? port 0x300 irq 10

# Wlan support is mandatory for some wireless LAN devices.
options 	IEEE80211_DEBUG		#enable debugging msgs
options 	IEEE80211_AMPDU_AGE	#age frames in AMPDU reorder q's
options 	IEEE80211_SUPPORT_MESH	#enable 802.11s D3.0 support
options 	IEEE80211_SUPPORT_TDMA	#enable TDMA support
device		wlan		# 802.11 support
device		wlan_acl	# 802.11 MAC-based access control for AP
device		wlan_ccmp	# 802.11 CCMP support
device		wlan_tkip	# 802.11 TKIP support
device		wlan_wep	# 802.11 WEP support
device		wlan_xauth	# 802.11 WPA or 802.1x authentication for AP
device		wlan_amrr	# 802.11 AMRR TX rate control algorithm
device		an		# Aironet Communications 4500/4800
device		ath		# Atheros AR521x
options 	AH_SUPPORT_AR5416
device		ath_hal		# Atheros Hardware Access Layer
#device		ath_rate_amrr	# Atheros AMRR TX rate control algorithm
#device		ath_rate_onoe	# Atheros Onoe TX rate control algorithm
device		ath_rate_sample	# Atheros Sample TX rate control algorithm
options		ATH_DEBUG	# turn on debugging output (see hw.ath.debug)
options		ATH_DIAGAPI	# diagnostic interface to the HAL
options		ATH_RXBUF=80	# number of RX buffers to allocate
options		ATH_TXBUF=400	# number of TX buffers to allocate
#device		iwl		# Intel PRO/Wireless 2100
device		iwi		# Intel PRO/Wireless 2200BG/2915ABG
device		iwn		# Intel WiFi Link 4965/1000/5000/5150/5300/6000/6050
device		wi		# WaveLAN/IEEE, PRISM-II, Spectrum24 802.11DS
#device		rtw		# RealTek 8180
#device		acx		# TI ACX100/ACX111.
device		xe		# Xircom PCMCIA
device		ral		# Ralink Technology 802.11 wireless NIC
device		wpi

# IEEE 802.11 adapter firmware modules

# iwifw:	Intel PRO/Wireless 2200BG/2225BG/2915ABG firmware
# iwnfw:	Intel WiFi Link 4965/1000/5000/5150/5300/6000/6050
# ralfw:	Ralink Technology RT25xx and RT26xx firmware
# wpifw:	Intel 3945ABG Wireless LAN Controller firmware

device		iwifw
device		iwnfw
device		ralfw
device		wpifw

# Bluetooth Protocols
device		bluetooth

#
# ATM related options
#
# The `en' device provides support for Efficient Networks (ENI)
# ENI-155 PCI midway cards, and the Adaptec 155Mbps PCI ATM cards (ANA-59x0).
#
# atm pseudo-device provides generic atm functions and is required for
# atm devices.
# NATM enables the netnatm protocol family that can be used to
# bypass TCP/IP.
#
# the current driver supports only PVC operations (no atm-arp, no multicast).
# for more details, please read the original documents at
# http://www.ccrc.wustl.edu/pub/chuck/tech/bsdatm/bsdatm.html
#
pseudo-device	atm
device		en
options 	NATM			#native ATM

# Sound drivers
#
# The flags of the device tells the device a bit more info about the
# device that normally is obtained through the PnP interface.
#	bit  2..0   secondary DMA channel;
#	bit  4      set if the board uses two dma channels;
#	bit 15..8   board type, overrides autodetection; leave it
#		    zero if don't know what to put in (and you don't,
#		    since this is unsupported at the moment...).
#
# This driver will use the new PnP code if it's available. You might
# need PNPBIOS for ISA devices.
#
# If you have a GUS-MAX card and want to use the CS4231 codec on the
# card the drqs for the gus max must be 8 bit (1, 2, or 3).
#
# If you would like to use the full duplex option on the gus, then define
# flags to be the ``read dma channel''.
#

# Basic sound card support:
device		pcm
# For PnP/PCI sound cards:
device		"snd_ad1816"
device		"snd_als4000"
device		"snd_atiixp"
device		"snd_cmi"
device		"snd_cs4281"
device		"snd_csa"
device		"snd_ds1"
device		"snd_emu10k1"
device		"snd_es137x"
device		"snd_ess"
device		"snd_fm801"
device		"snd_hda"
device		"snd_ich"
device		"snd_maestro"
device		"snd_maestro3"
device		"snd_mss"
device		"snd_neomagic"
device		"snd_sb16"
device		"snd_sb8"
device		"snd_sbc"
device		"snd_solo"
device		"snd_t4dwave"
device		"snd_via8233"
device		"snd_via82c686"
device		"snd_vibes"
# For non-pnp sound cards:
device		pcm0 at isa? irq 10 drq 1 flags 0x0
# USB
device		"snd_uaudio"

#
# Miscellaneous hardware:
#
# bktr: Brooktree bt848/848a/849a/878/879 video capture and TV Tuner board
# joy: joystick
# rp: Comtrol Rocketport(ISA) - single card
# si: Specialix SI/XIO 4-32 port terminal multiplexor
# nmdm: nullmodem terminal driver (see nmdm(4))

# Notes on the Comtrol Rocketport driver:
#
# The exact values used for rp0 depend on how many boards you have
# in the system.  The manufacturer's sample configs are listed as:
#
#   Comtrol Rocketport ISA single card
#               device  rp0     at isa? port 0x280
#
#   If instead you have two ISA cards, one installed at 0x100 and the
#   second installed at 0x180, then you should add the following to
#   your kernel configuration file:
#
#               device  rp0     at isa? port 0x100
#               device  rp1     at isa? port 0x180
#
#   For 4 ISA cards, it might be something like this:
#
#               device  rp0     at isa? port 0x180
#               device  rp1     at isa? port 0x100
#               device  rp2     at isa? port 0x340
#               device  rp3     at isa? port 0x240
#
#   And for PCI cards, you only need say:
#
#               device rp

# Notes on the Specialix SI/XIO driver:
#  **This is NOT a Specialix supported Driver!**
#  The host card is memory, not IO mapped.
#  The Rev 1 host cards use a 64K chunk, on a 32K boundary.
#  The Rev 2 host cards use a 32K chunk, on a 32K boundary.
#  The cards can use an IRQ of 11, 12 or 15.

# for the SoundBlaster 16 multicd - up to 4 devices
device		joy0	at isa? port IO_GAME
device		nrp
#device		rp0	at isa? port 0x280
device		si0	at isa? iomem 0xd0000 irq 12
# nullmodem terminal driver
device		nmdm

# The `ahc' device provides support for the Adaptec 274X and 284X
# adapters.
device		ahc

# The aic7xxx driver will attempt to use memory mapped I/O for all PCI
# controllers that have it configured only if this option is set. Unfortunately,
# this doesn't work on some motherboards, which prevents it from being the
# default.
options 	AHC_ALLOW_MEMIO

# The adw driver will attempt to use memory mapped I/O for all PCI
# controllers that have it configured only if this option is set.
options 	ADW_ALLOW_MEMIO

#
# PCI devices & PCI options:
#
# The main PCI bus device is `pci'.  It provides auto-detection and
# configuration support for all devices on the PCI bus, using either
# configuration mode defined in the PCI specification.

device		pci

# PCI options
#
#Enable pci resources left off by a "lazy" BIOS.
#
options 	COMPAT_OLDPCI	#FreeBSD 2.2 and 3.x compatibility shims

# AGP GART support
#
device		agp


# The `ahc' device provides support for the Adaptec 29/3940(U)(W)
# and motherboard based AIC7870/AIC7880 adapters.
options 	AHC_DEBUG
options 	AHC_DEBUG_OPTS=0xffffffff
options 	AHC_REG_PRETTY_PRINT
options 	AHC_TMODE_ENABLE
#
# The 'ahd' device provides support for the Adaptec 79xx Ultra320
# SCSI adapters. Options are documented in the ahd(4) manpage:
options 	AHD_DEBUG
options 	AHD_DEBUG_OPTS=0xffffffff
options 	AHD_REG_PRETTY_PRINT
#options 	AHD_TMODE_ENABLE=0xff
#
# The `amd' device provides support for the AMD 53C974 SCSI host
# adapter chip as found on devices such as the Tekram DC-390(T).
#
# The `bge' device provides support for gigabit ethernet adapters
# based on the Broadcom BCM570x family of controllers, including the
# 3Com 3c996-T, the Netgear GA302T, the SysKonnect SK-9D21 and SK-9D41,
# and the embedded gigE NICs on Dell PowerEdge 2550 servers.
#
# The `ncr' device provides support for the NCR 53C810 and 53C825
# self-contained SCSI host adapters.
#
# The `isp' device provides support for the Qlogic ISP 1020, 1040
# nd 1040B PCI SCSI host adapters, ISP 1240 Dual Ultra SCSI,
# ISP 1080 and 1280 (Dual) Ultra2, ISP 12160 Ultra3 SCSI, as well as
# the Qlogic ISP 2100 and ISP 2200 Fibre Channel Host Adapters.
#
# The `dc' device provides support for PCI fast ethernet adapters
# based on the DEC/Intel 21143 and various workalikes including:
# the ADMtek AL981 Comet and AN985 Centaur, the ASIX Electronics
# AX88140A and AX88141, the Davicom DM9100 and DM9102, the Lite-On
# 82c168 and 82c169 PNIC, the Lite-On/Macronix LC82C115 PNIC II
# and the Macronix 98713/98713A/98715/98715A/98725 PMAC. This driver
# replaces the old al, ax, dm, pn and mx drivers.  List of brands:
# Digital DE500-BA, Kingston KNE100TX, D-Link DFE-570TX, SOHOware SFA110,
# SVEC PN102-TX, CNet Pro110B, 120A, and 120B, Compex RL100-TX,
# LinkSys LNE100TX, LNE100TX V2.0, Jaton XpressNet, Alfa Inc GFC2204,
# KNE110TX.
#
# The `de' device provides support for the Digital Equipment DC21040
# self-contained Ethernet adapter.
#
# The `em' device provides support for the Intel Pro/1000 Family of Gigabit
# adapters (82542, 82543, 82544, 82540).
#
# The `et' device provides support for the Agere ET1310 10/100/1000 PCIe
# adapters.
#
# The `fxp' device provides support for the Intel EtherExpress Pro/100B
# PCI Fast Ethernet adapters.
#
# The 'lge' device provides support for PCI gigabit ethernet adapters
# based on the Level 1 LXT1001 NetCellerator chipset. This includes the
# D-Link DGE-500SX, SMC TigerCard 1000 (SMC9462SX), and some Addtron cards.
#
# The 'my' device provides support for the Myson MTD80X and MTD89X PCI
# Fast Ethernet adapters.
#
# The 'nge' device provides support for PCI gigabit ethernet adapters
# based on the National Semiconductor DP83820 and DP83821 chipset. This
# includes the SMC EZ Card 1000 (SMC9462TX), D-Link DGE-500T, Asante
# FriendlyNet GigaNIX 1000TA and 1000TPC, the Addtron AEG320T, the
# LinkSys EG1032 and EG1064, the Surecom EP-320G-TX and the Netgear GA622T.
#
# The 'pcn' device provides support for PCI fast ethernet adapters based
# on the AMD Am79c97x chipsets, including the PCnet/FAST, PCnet/FAST+,
# PCnet/PRO and PCnet/Home. These were previously handled by the lnc
# driver (and still will be if you leave this driver out of the kernel).
#
# Te 're' device provides support for PCI GigaBit ethernet adapters based
# on the RealTek 8169 chipset. It also supports the 8139C+ and is the
# preferred driver for that chip.
#
# The 'rl' device provides support for PCI fast ethernet adapters based
# on the RealTek 8129/8139 chipset. Note that the RealTek driver defaults
# to using programmed I/O to do register accesses because memory mapped
# mode seems to cause severe lockups on SMP hardware. This driver also
# supports the Accton EN1207D `Cheetah' adapter, which uses a chip called
# the MPX 5030/5038, which is either a RealTek in disguise or a RealTek
# workalike.  Note that the D-Link DFE-530TX+ uses the RealTek chipset
# and is supported by this driver, not the 'vr' driver.
#
# The 'sf' device provides support for Adaptec Duralink PCI fast
# ethernet adapters based on the Adaptec AIC-6915 "starfire" controller.
# This includes dual and quad port cards, as well as one 100baseFX card.
# Most of these are 64-bit PCI devices, except for one single port
# card which is 32-bit.
#
# The 'ste' device provides support for adapters based on the Sundance
# Technologies ST201 PCI fast ethernet controller. This includes the
# D-Link DFE-550TX.
#
# The 'sis' device provides support for adapters based on the Silicon
# Integrated Systems SiS 900 and SiS 7016 PCI fast ethernet controller
# chips.
#
# The 'sk' device provides support for the SysKonnect SK-984x series
# PCI gigabit ethernet NICs. This includes the SK-9841 and SK-9842
# single port cards (single mode and multimode fiber) and the
# SK-9843 and SK-9844 dual port cards (also single mode and multimode).
# The driver will autodetect the number of ports on the card and
# attach each one as a separate network interface.
#
# The 'ti' device provides support for PCI gigabit ethernet NICs based
# on the Alteon Networks Tigon 1 and Tigon 2 chipsets. This includes the
# Alteon AceNIC, the 3Com 3c985, the Netgear GA620 and various others.
# Note that you will probably want to bump up NMBCLUSTERS a lot to use
# this driver.
#
# The 'tl' device provides support for the Texas Instruments TNETE100
# series 'ThunderLAN' cards and integrated ethernet controllers. This
# includes several Compaq Netelligent 10/100 cards and the built-in
# ethernet controllers in several Compaq Prosignia, Proliant and
# Deskpro systems. It also supports several Olicom 10Mbps and 10/100
# boards.
#
# The `tx' device provides support for the SMC 9432 TX, BTX and FTX cards.
#
# The `txp' device provides support for the 3Com 3cR990 "Typhoon"
# 10/100 adapters.
#
# The `vr' device provides support for various fast ethernet adapters
# based on the VIA Technologies VT3043 `Rhine I' and VT86C100A `Rhine II'
# chips, including the D-Link DFE530TX (see 'rl' for DFE530TX+), the Hawking
# Technologies PN102TX, and the AOpen/Acer ALN-320.
#
# The `vx' device provides support for the 3Com 3C590 and 3C595
# early support
#
# The `wb' device provides support for various fast ethernet adapters
# based on the Winbond W89C840F chip. Note: this is not the same as
# the Winbond W89C940F, which is an NE2000 clone.
#
# The `xl' device provides support for the 3Com 3c900, 3c905 and
# 3c905B (Fast) Etherlink XL cards and integrated controllers. This
# includes the integrated 3c905B-TX chips in certain Dell Optiplex and
# Dell Precision desktop machines and the integrated 3c905-TX chips
# in Dell Latitude laptop docking stations.
#
# The 'bktr' device is a PCI video capture device using the Brooktree
# bt848/bt848a/bt849a/bt878/bt879 chipset. When used with a TV Tuner it forms a
# TV card, eg Miro PC/TV, Hauppauge WinCast/TV WinTV, VideoLogic Captivator,
# Intel Smart Video III, AverMedia, IMS Turbo, FlyVideo.
#
# options 	OVERRIDE_CARD=xxx
# options 	OVERRIDE_TUNER=xxx
# options 	OVERRIDE_MSP=1
# options 	OVERRIDE_DBX=1
# These options can be used to override the auto detection
# The current values for xxx are found in src/sys/dev/video/bktr/bktr_card.h
# Using sysctl(8) run-time overrides on a per-card basis can be made
#
# options 	BKTR_SYSTEM_DEFAULT=BROOKTREE_PAL
# or
# options 	BKTR_SYSTEM_DEFAULT=BROOKTREE_NTSC
# Specifes the default video capture mode.
# This is required for Dual Crystal (28&35Mhz) boards where PAL is used
# to prevent hangs during initialisation.  eg VideoLogic Captivator PCI.
#
# options 	BKTR_USE_PLL
# PAL or SECAM users who have a 28Mhz crystal (and no 35Mhz crystal)
# must enable PLL mode with this option. eg some new Bt878 cards.
#
# options 	BKTR_GPIO_ACCESS
# This enable IOCTLs which give user level access to the GPIO port.
#
# options 	BKTR_NO_MSP_RESET
# Prevents the MSP34xx reset. Good if you initialise the MSP in another OS first
#
# options 	BKTR_430_FX_MODE
# Switch Bt878/879 cards into Intel 430FX chipset compatibility mode.
#
# options 	BKTR_SIS_VIA_MODE
# Switch Bt878/879 cards into SIS/VIA chipset compatibility mode which is
# needed for some old SiS and VIA chipset motherboards.
# This also allows Bt878/879 chips to work on old OPTi (<1997) chipset
# motherboards and motherboards with bad or incomplete PCI 2.1 support.
# As a rough guess, old = before 1998
#
# options 	BKTR_NEW_MSP34XX_DRIVER
# Use new, more complete initialization scheme for the msp34* soundchip.
# Should fix stereo autodetection if the old driver does only output
# mono sound.
#
# options	BKTR_OVERRIDE_CARD=xxx
# options	BKTR_OVERRIDE_DBX=xxx
# options	BKTR_OVERRIDE_MSP=xxx
# options	BKTR_OVERRIDE_TUNER=xxx
# These options can be used to select a specific device, regardless of
# the autodetection and i2c device checks (see comments in bktr_card.c).
#
device		ahc		# AHA2940 and onboard AIC7xxx devices
device		ahd		# AIC79xx devices
device		amd		# AMD 53C974 (Tekram DC-390(T))
device		isp		# Qlogic family
device		ispfw		# Firmware for QLogic HBAs
device		mpt		# LSI '909 FC adapters
device		mps		# LSI-Logic MPT-Fusion 2
device		ncr		# NCR/Symbios Logic
device		sym		# NCR/Symbios Logic (newer chipsets)
device		trm		# Tekram DC395U/UW/F and DC315U
#
# Options for ISP
#
#	ISP_TARGET_MODE		-	enable target mode operation
#options 	ISP_TARGET_MODE=1

# Options used in dev/sym/ (Symbios SCSI driver).
#options 	SYM_SETUP_LP_PROBE_MAP	#-Low Priority Probe Map (bits)
					# Allows the ncr to take precedence
					# 1 (1<<0) -> 810a, 860
					# 2 (1<<1) -> 825a, 875, 885, 895
					# 4 (1<<2) -> 895a, 896, 1510d
#options 	SYM_SETUP_SCSI_DIFF	#-HVD support for 825a, 875, 885
					# disabled:0 (default), enabled:1
#options 	SYM_SETUP_PCI_PARITY	#-PCI parity checking
					# disabled:0, enabled:1 (default)
#options 	SYM_SETUP_MAX_LUN	#-Number of LUNs supported
					# default:8, range:[1..64]


# MII bus support is required for some PCI 10/100 ethernet NICs,
# namely those which use MII-compliant transceivers or implement
# transceiver control interfaces that operate like an MII. Adding
# "device miibus0" to the kernel config pulls in support for
# the generic miibus API and all of the PHY drivers, including a
# generic one for PHYs that aren't specifically handled by an
# individual driver.
device		miibus

# PCI Ethernet NICs that use the common MII bus controller code.
device		ae		# Attansic/Atheros L2 Fast Ethernet
device		alc		# Atheros AR8131/AR8132
device		ale		# Atheros AR8121/AR8113/AR8114
device		age		# Attansic/Atheros L1 Gigabit Ethernet
device		bce		# Broadcom NetXtreme II Gigabit Ethernet
device		bfe		# Broadcom BCM440x 10/100 Ethernet
device		dc		# DEC/Intel 21143 and various workalikes
device		fxp		# Intel EtherExpress PRO/100B (82557, 82558)
device		my		# Myson Fast Ethernet (MTD80X, MTD89X)
device		pcn		# AMD Am79C97x PCI 10/100 NICs
device		re		# RealTek 8139C+/8169
device		rl		# RealTek 8129/8139
device		sbsh		# Granch SBNI16 SHDSL modem
device		sf		# Adaptec AIC-6915 (``Starfire'')
device		sis		# Silicon Integrated Systems SiS 900/SiS 7016
device		ste		# Sundance ST201 (D-Link DFE-550TX)
device		tl		# Texas Instruments ThunderLAN
device		tx		# SMC EtherPower II (83c17x ``EPIC'')
device		vge		# VIA 612x GigE
device		vr		# VIA Rhine, Rhine II
device		wb		# Winbond W89C840F
device		xl		# 3Com 3c90x (``Boomerang'', ``Cyclone'')

# PCI Ethernet NICs.
device		de		# DEC/Intel DC21x4x (``Tulip'')
device		txp		# 3Com 3cR990 (``Typhoon'')
device		vx		# 3Com 3c590, 3c595 (``Vortex'')

# Gigabit Ethernet NICs.
device		bge		# Broadcom BCM570x (``Tigon III'')
device		em		# Intel Pro/1000 (8254x,8257x)
				# Requires ig_hal
device		emx		# Intel Pro/1000 (8257{1,2,3,4})
				# Requires ig_hal
device		ig_hal		# Intel Pro/1000 hardware abstraction layer
device		et		# Agere ET1310 10/100/1000 Ethernet
device		lge		# Level 1 LXT1001 (``Mercury'')
device		mxge		# Myricom Myri-10G 10GbE NIC
device		nfe		# nVidia nForce2/3 MCP04/51/55 CK804
device		nge		# NatSemi DP83820 and DP83821
device		sk		# SysKonnect GEnesis, LinkSys EG1023, D-Link
device		ti		# Alteon (``Tigon I'', ``Tigon II'')
device		stge		# Sundance/Tamarack TC9021 Gigabit Ethernet
device		msk		# Marvell/SysKonnect Yukon II Gigabit Ethernet
device		jme		# JMicron Gigabit/Fast Ethernet

# Brooktree driver has been ported to the new I2C framework. Thus,
# you'll need to have the following 3 lines in the kernel config.
#     device smbus
#     device iicbus
#     device iicbb
# The iic and smb devices are only needed if you want to control other
# I2C slaves connected to the external connector of some cards.
#
device		bktr
options 	BKTR_NEW_MSP34XX_DRIVER

# WinTV PVR-250/350 driver
device		cxm

#
# PCCARD/PCMCIA
#
# pccard: pccard slots
# cardbus/cbb: cardbus bridge
device		pccard
device		cardbus
device		cbb

# For older notebooks that signal a powerfail condition (external
# power supply dropped, or battery state low) by issuing an NMI:

options 	POWERFAIL_NMI	# make it beep instead of panicing

#
# MMC/SD
#
# mmc 		MMC/SD bus
# mmcsd		MMC/SD memory card
# sdhci		Generic PCI SD Host Controller
#
device		mmc
device		mmcsd
device		sdhci

#
# SMB bus
#
# System Management Bus support is provided by the 'smbus' device.
# Access to the SMBus device is via the 'smb' device (/dev/smb*),
# which is a child of the 'smbus' device.
#
# Supported devices:
# smb		standard io through /dev/smb*
#
# Supported SMB interfaces:
# iicsmb	I2C to SMB bridge with any iicbus interface
# bktr		brooktree848 I2C hardware interface
# intpm		Intel PIIX4 (82371AB, 82443MX) Power Management Unit
# alpm		Acer Aladdin-IV/V/Pro2 Power Management Unit
# ichsmb	Intel ICH SMBus controller chips (82801AA, 82801AB, 82801BA)
# viapm		VIA VT82C586B,596,686A and VT8233 SMBus controllers
# amdpm		AMD 756 Power Management Unit
# amdsmb	AMD 8111 SMBus 2.0 Controller
#
device		smbus		# Bus support, required for smb below.

device		intpm
device		alpm
device		ichsmb
device		viapm
device		amdpm
device		amdsmb

device		smb

#
# I2C Bus
#
# Philips i2c bus support is provided by the `iicbus' device.
#
# Supported devices:
# ic	i2c network interface
# iic	i2c standard io
# iicsmb i2c to smb bridge. Allow i2c i/o with smb commands.
#
# Supported interfaces:
# pcf	Philips PCF8584 ISA-bus controller
# bktr	brooktree848 I2C software interface
#
# Other:
# iicbb	generic I2C bit-banging code (needed by lpbb, bktr)
#
device		iicbus		# Bus support, required for ic/iic/iicsmb below.
device		iicbb

device		ic
device		iic
device		iicsmb		# smb over i2c bridge

device		pcf0	at isa? port 0x320 irq 5

# Intel Core and newer CPUs on-die digital thermal sensor support
device		coretemp

# AMD Family 0Fh, 10h and 11h temperature sensors
device		kate
device		km

# ThinkPad Active Protection System accelerometer
device		aps0	at isa? port 0x1600

# HW monitoring devices lm(4), it(4) and nsclpcsio.
device		lm0	at isa? port 0x290
device		it0	at isa? port 0x290
device		it1	at isa? port 0xc00
device		it2	at isa? port 0xd00
device		it3	at isa?	port 0x228
device		nsclpcsio0 at isa? port 0x2e
device		nsclpcsio1 at isa? port 0x4e
device		wbsio0	at isa? port 0x2e
device		wbsio1	at isa? port 0x4e
device		lm#3	at wbsio?
device		uguru0	at isa? port 0xe0	# ABIT uGuru

#---------------------------------------------------------------------------
# ISDN4BSD
#
# See /usr/share/examples/isdn/ROADMAP for an introduction to isdn4bsd.
#
# i4b passive ISDN cards support contains the following hardware drivers:
#
#       isic  - Siemens/Infineon ISDN ISAC/HSCX/IPAC chipset driver
#       iwic  - Winbond W6692 PCI bus ISDN S/T interface controller
#       ifpi  - AVM Fritz!Card PCI driver
#       ifpi2 - AVM Fritz!Card PCI driver Version 2
#       ihfc  - Cologne Chip HFC ISA/ISA-PnP chipset driver
#       ifpnp - AVM Fritz!Card PnP driver
#       itjc  - Siemens ISAC / TJNet Tiger300/320 chipset
#
# i4b active ISDN cards support contains the following hardware drivers:
#
#       iavc  - AVM B1 PCI, AVM B1 ISA, AVM T1
#
# Note that the ``options'' (if given) and ``device'' lines must BOTH
# be uncommented to enable support for a given card !
#
# In addition to a hardware driver (and probably an option) the mandatory
# ISDN protocol stack devices and the mandatory support device must be
# enabled as well as one or more devices from the optional devices section.
#
#---------------------------------------------------------------------------
# isic driver (Siemens/Infineon chipsets)
#---------------------------------------------------------------------------
#
# ISA bus non-PnP Cards:
# ----------------------
#
# Teles S0/8 or Niccy 1008
#options 	TEL_S0_8
#device		isic0	at isa? iomem 0xd0000 irq 5 flags 1
#
# Teles S0/16 or Creatix ISDN-S0 or Niccy 1016
#options 	TEL_S0_16
#device		isic0	at isa? port 0xd80 iomem 0xd0000 irq 5 flags 2
#
# Teles S0/16.3
#options 	TEL_S0_16_3
#device		isic0	at isa? port 0xd80 irq 5 flags 3
#
# AVM A1 or AVM Fritz!Card
#options 	AVM_A1
#device		isic0	at isa? port 0x340 irq 5 flags 4
#
# USRobotics Sportster ISDN TA intern
#options 	USR_STI
#device		isic0	at isa? port 0x268 irq 5 flags 7
#
# ITK ix1 Micro ( < V.3, non-PnP version )
#options 	ITKIX1
#device		isic0	at isa? port 0x398 irq 10 flags 18
#
# ELSA PCC-16
#options 	ELSA_PCC16
#device		isic0	at isa? port 0x360 irq 10 flags 20
#
# ISA bus PnP Cards:
# ------------------
#
# Teles S0/16.3 PnP
#options 	TEL_S0_16_3_P
#device		isic
#
# Creatix ISDN-S0 P&P
#options 	CRTX_S0_P
#device		isic
#
# Dr. Neuhaus Niccy Go@
#options 	DRN_NGO
#device		isic
#
# Sedlbauer Win Speed
#options 	SEDLBAUER
#device		isic
#
# Dynalink IS64PH
#options 	DYNALINK
#device		isic
#
# ELSA QuickStep 1000pro ISA
#options 	ELSA_QS1ISA
#device		isic
#
# ITK ix1 Micro ( V.3, PnP version )
#options 	ITKIX1
#device		isic
#
# Siemens I-Surf 2.0
#options 	SIEMENS_ISURF2
#device		isic
#
# Asuscom ISDNlink 128K ISAC
#options 	ASUSCOM_IPAC
#device 	isic
#
# Eicon Diehl DIVA 2.0 and 2.02
#options       EICON_DIVA
#device 	isic
#
# Compaq Microcom 610
#options       COMPAQ_M610
#device 	isic
#
# PCI bus Cards:
# --------------
#
# ELSA MicroLink ISDN/PCI (same as ELSA QuickStep 1000pro PCI)
#options 	ELSA_QS1PCI
#device		isic
#
#---------------------------------------------------------------------------
#       ifpnp driver for AVM Fritz!Card ISA PnP
#---------------------------------------------------------------------------
#
# AVM Fritz!Card ISA PnP
#device ifpnp
#
#---------------------------------------------------------------------------
#       ihfc driver for Cologne Chip ISA chipsets (experimental!)
#---------------------------------------------------------------------------
#
# Teles 16.3c ISA PnP
# AcerISDN P10 ISA PnP
# TELEINT ISDN SPEED No.1
#device ihfc
#
#---------------------------------------------------------------------------
#       ifpi driver for AVM Fritz!Card PCI 1.0 (2.0 unsupported!)
#---------------------------------------------------------------------------
#
# AVM Fritz!Card PCI 1.0
#device  ifpi
#
#---------------------------------------------------------------------------
#       ifpi2 driver for AVM Fritz!Card PCI 2.0
#---------------------------------------------------------------------------
#
# AVM Fritz!Card PCI 2.0
#device  "ifpi2"
#
#---------------------------------------------------------------------------
#       iwic driver for Winbond W6692 chipset
#---------------------------------------------------------------------------
#
# ASUSCOM P-IN100-ST-D (and other Winbond W6692 based cards)
#device  iwic
#
#---------------------------------------------------------------------------
#       itjc driver for Siemens ISAC / TJNet Tiger300/320 chipset
#---------------------------------------------------------------------------
#
# Traverse Technologies NETjet-S
# Teles PCI-TJ
#device  itjc
#
#---------------------------------------------------------------------------
#       iavc driver (AVM active cards, needs i4bcapi driver!)
#---------------------------------------------------------------------------
#
#pseudo-device   "i4bcapi"	2
#
# AVM B1 PCI
#device          iavc0
#
# AVM B1 ISA bus (PnP mode not supported!)
#device  iavc0 at isa? port 0x150 irq 5
#
#
# ISDN Protocol Stack (mandatory)
# -------------------------------
#
# Q.921 / layer 2 - i4b passive cards D channel handling
#pseudo-device	"i4bq921"
#
# Q.931 / layer 3 - i4b passive cards D channel handling
#pseudo-device	"i4bq931"
#
# layer 4 - i4b common passive and active card handling
#pseudo-device	"i4b"
#
# ISDN devices
# ------------
#
# userland driver to do ISDN tracing (for passive cards only)
#pseudo-device	"i4btrc"	4
#
# userland driver to control the whole thing (mandatory)
#pseudo-device	"i4bctl"
#
# userland driver for access to raw B channel
#pseudo-device	"i4brbch"	4
#
# userland driver for telephony
#pseudo-device	"i4btel"	2
#
# network driver for IP over raw HDLC ISDN
#pseudo-device	"i4bipr"	4
# enable VJ header compression detection for ipr i/f
#options 	IPR_VJ
# enable logging of the first n IP packets to isdnd (n=32 here)
#options 	IPR_LOG=32
#
# network driver for sync PPP over ISDN - requires sppp
#pseudo-device	"i4bisppp"	4


# Parallel-Port Bus
#
# Parallel port bus support is provided by the `ppbus' device.
# Multiple devices may be attached to the parallel port, devices
# are automatically probed and attached when found.
#
# Supported devices:
# vpo	Iomega Zip Drive
#	Requires SCSI disk support ('scbus' and 'da'); the best
#	performance is achieved with ports in EPP 1.9 mode.
# lpt	Parallel Printer
# plip	Parallel network interface
# ppi	General-purpose I/O ("Geek Port") + IEEE1284 I/O
# pps	Pulse per second Timing Interface
# lpbb	Philips official parallel port I2C bit-banging interface
#
# Supported interfaces:
# ppc	ISA-bus parallel port interfaces.
#

options 	PPC_PROBE_CHIPSET # Enable chipset specific detection
				  # (see flags in ppc(4))
options 	DEBUG_1284	# IEEE1284 signaling protocol debug
options 	PERIPH_1284	# Makes your computer act as a IEEE1284
				# compliant peripheral
options 	DONTPROBE_1284	# Avoid boot detection of PnP parallel devices
options 	VP0_DEBUG	# ZIP/ZIP+ debug
options 	LPT_DEBUG	# Printer driver debug
options 	PPC_DEBUG=2	# Parallel chipset level debug
options 	PLIP_DEBUG	# Parallel network IP interface debug
options 	PCFCLOCK_VERBOSE         # Verbose pcfclock driver
options 	PCFCLOCK_MAX_RETRIES=5   # Maximum read tries (default 10)

device		ppc0	at isa? irq 7
device		ppbus
device		vpo
device		lpt
device		plip
device		ppi
device		pps
device		lpbb
device		pcfclock

# Kernel BOOTP support

options 	BOOTP		# Use BOOTP to obtain IP address/hostname
options 	BOOTP_NFSROOT	# NFS mount root filesystem using BOOTP info
options 	BOOTP_NFSV3	# Use NFS v3 to NFS mount root
options 	BOOTP_COMPAT	# Workaround for broken bootp daemons.
options 	BOOTP_WIRED_TO=fxp0 # Use interface fxp0 for BOOTP

#
# Add tie-ins for a hardware watchdog.  This only enable the hooks;
# the user must still supply the actual driver.
#
options 	HW_WDOG

#
# Set the number of PV entries per process.  Increasing this can
# stop panics related to heavy use of shared memory. However, that can
# (combined with large amounts of physical memory) cause panics at
# boot time due the kernel running out of VM space.
#
# If you're tweaking this, you might also want to increase the sysctls
# "vm.v_free_min", "vm.v_free_reserved", and "vm.v_free_target".
#
# The value below is the one more than the default.
#
options 	PMAP_SHPGPERPROC=201

#
# Disable swapping. This option removes all code which actually performs
# swapping, so it's not possible to turn it back on at run-time.
#
# This is sometimes usable for systems which don't have any swap space
# (see also sysctls "vm.defer_swapspace_pageouts" and
# "vm.disable_swapspace_pageouts")
#
#options 	NO_SWAPPING

# Set the size of the buffer cache KVM reservation, in buffers.  This is
# scaled by approximately 16384 bytes.  The system will auto-size the buffer
# cache if this option is not specified.
#
options 	NBUF=512

# Set the size of the mbuf KVM reservation, in clusters.  This is scaled
# by approximately 2048 bytes.  The system will auto-size the mbuf area
# to (512 + maxusers*16) if this option is not specified.
# maxusers is in turn computed at boot time depending on available memory
# or set to the value specified by "options MAXUSERS=x" (x=0 means
# autoscaling).
# So, to take advantage of autoscaling, you have to remove both
# NMBCLUSTERS and MAXUSERS (and NMBUFS) from your kernel config.
#
options 	NMBCLUSTERS=1024

# Set the number of mbufs available in the system. Each mbuf
# consumes 256 bytes. The system will autosize this (to 4 times
# the number of NMBCLUSTERS, depending on other constraints)
# if this option is not specified.
#
options 	NMBUFS=4096

# Tune the buffer cache maximum KVA reservation, in bytes.  The maximum is
# usually capped at 200 MB, effecting machines with > 1GB of ram.  Note
# that the buffer cache only really governs write buffering and disk block
# translations.  The VM page cache is our primary disk cache and is not
# effected by the size of the buffer cache.
#
options 	VM_BCACHE_SIZE_MAX="(100*1024*1024)"

# Tune the swap zone KVA reservation, in bytes.  The default is typically
# 70 MB, giving the system the ability to manage a maximum of 28GB worth
# of swapped out data.
#
options 	VM_SWZONE_SIZE_MAX="(50*1024*1024)"

#
# Enable extra debugging code for locks.  This stores the filename and
# line of whatever acquired the lock in the lock itself, and change a
# number of function calls to pass around the relevant data.  This is
# not at all useful unless you are debugging lock code.  Also note
# that it is likely to break e.g. fstat(1) unless you recompile your
# userland with -DDEBUG_LOCKS as well.
#
options 	DEBUG_LOCKS

# Set the amount of time (in seconds) the system will wait before
# rebooting automatically when a kernel panic occurs.  If set to (-1),
# the system will wait indefinitely until a key is pressed on the
# console.
options 	PANIC_REBOOT_WAIT_TIME=16

# Attempt to bypass the buffer cache and put data directly into the
# userland buffer for read operation when O_DIRECT flag is set on the
# file.  Both offset and length of the read operation must be
# multiples of the physical media sector size.
#
options		DIRECTIO

# Specify a lower limit for the number of swap I/O buffers.  They are
# (among other things) used when bypassing the buffer cache due to
# DIRECTIO kernel option enabled and O_DIRECT flag set on file.
#
#options		NSWBUF_MIN=120

# The 'asr' driver provides support for current DPT/Adaptec SCSI RAID
# controllers (SmartRAID V and VI and later).
# These controllers require the CAM infrastructure.
#
device		asr

# The 'dpt' driver provides support for DPT controllers (http://www.dpt.com/).
# These have hardware RAID-{0,1,5} support, and do multi-initiator I/O.
# The DPT controllers are commonly re-licensed under other brand-names -
# some controllers by Olivetti, Dec, HP, AT&T, SNI, AST, Alphatronic, NEC and
# Compaq are actually DPT controllers.
#
# See src/sys/dev/raid/dpt for debugging and other subtle options.
#   DPT_MEASURE_PERFORMANCE Enables a set of (semi)invasive metrics. Various
#                           instruments are enabled.  The tools in
#                           /usr/sbin/dpt_* assume these to be enabled.
#   DPT_HANDLE_TIMEOUTS     Normally device timeouts are handled by the DPT.
#                           If you ant the driver to handle timeouts, enable
#                           this option.  If your system is very busy, this
#                           option will create more trouble than solve.
#   DPT_TIMEOUT_FACTOR      Used to compute the excessive amount of time to
#                           wait when timing out with the above option.
#  DPT_DEBUG_xxxx           These are controllable from sys/dev/dpt/raid/dpt.h
#  DPT_LOST_IRQ             When enabled, will try, once per second, to catch
#                           any interrupt that got lost.  Seems to help in some
#                           DPT-firmware/Motherboard combinations.  Minimal
#                           cost, great benefit.
#  DPT_RESET_HBA            Make "reset" actually reset the controller
#                           instead of fudging it.  Only enable this if you
#			    are 100% certain you need it.

device		dpt

# DPT options
#!CAM# options 	DPT_MEASURE_PERFORMANCE
#!CAM# options 	DPT_HANDLE_TIMEOUTS
options 	DPT_TIMEOUT_FACTOR=4
options 	DPT_LOST_IRQ
options 	DPT_RESET_HBA

#
# Compaq "CISS" RAID controllers (SmartRAID 5* series)
# These controllers have a SCSI-like interface, and require the
# CAM infrastructure.
#
device		ciss

#
# Intel Integrated RAID controllers.
# This driver is supported and maintained by
# "Leubner, Achim" <Achim_Leubner@adaptec.com>.
#
device          iir

#
# Mylex AcceleRAID and eXtremeRAID controllers with v6 and later
# firmware.  These controllers have a SCSI-like interface, and require
# the CAM infrastructure.
#
device          mly

# USB support
# UHCI controller
device		uhci
# OHCI controller
device		ohci
# EHCI controller
device 		ehci
# General USB code (mandatory for USB)
device		usb
#
# USB Bluetooth
device		ubt
# Fm Radio
device		ufm
# Generic USB device driver
device		ugen
# Human Interface Device (anything with buttons and dials)
device		uhid
# USB keyboard
device		ukbd
# USB printer
device		ulpt
# USB Iomega Zip 100 Drive (Requires scbus and da)
device		umass
# USB modem support
device		umodem
# USB mouse
device		ums
# USB Rio (MP3 Player)
device		urio
# USB scanners
device		uscanner
# USB com devices
device		moscom
device		uark
device		ubsa
device		uchcom
device		ucom
device		uftdi
device		ugensa
device		umct
device		uplcom
device		uslcom
device		uticom
device		uvisor
device		uvscom

#
# ADMtek USB ethernet. Supports the LinkSys USB100TX,
# the Billionton USB100, the Melco LU-ATX, the D-Link DSB-650TX
# and the SMC 2202USB. Also works with the ADMtek AN986 Pegasus
# eval board.
device		aue
#
# ASIX Electronics AX88172 USB 2.0 ethernet driver. Used in the
# LinkSys USB200M and various other adapters.
device		axe
#
# CATC USB-EL1201A USB ethernet. Supports the CATC Netmate
# and Netmate II, and the Belkin F5U111.
device		cue
#
# Kawasaki LSI ethernet. Supports the LinkSys USB10T,
# Entrega USB-NET-E45, Peracom Ethernet Adapter, the
# 3Com 3c19250, the ADS Technologies USB-10BT, the ATen UC10T,
# the Netgear EA101, the D-Link DSB-650, the SMC 2102USB
# and 2104USB, and the Corega USB-T.
device		kue
#
# USB CDC ethernet. Supports the LG P-500 smartphone.
device		lgue
#
# RealTek 8150 based USB ethernet device:
#   Melco LUA-KTX
#   GREEN HOUSE GH-USB100B
#   Billionton ThumbLAN USBKR2-100B
device		rue

# USB wireless NICs, requires wlan_amrr
#
# Ralink Technology RT2501USB/RT2601USB
#device		rum
#
# Ralink Technology RT2500USB
#device		ural

# debugging options for the USB subsystem
#
options 	USB_DEBUG

# options for ukbd:
options 	UKBD_DFLT_KEYMAP	# specify the built-in keymap
makeoptions	UKBD_DFLT_KEYMAP=it.iso

# Firewire support
device		firewire	# Firewire bus code
device		sbp		# SCSI over Firewire (Requires scbus and da)
device		fwe		# Ethernet over Firewire (non-standard!)

# dcons support (Dumb Console Device)
device		dcons			# dumb console driver
device		dcons_crom		# FireWire attachment
options		DCONS_BUF_SIZE=16384	# buffer size
options		DCONS_POLL_HZ=100	# polling rate
options		DCONS_FORCE_CONSOLE=1	# force to be the primary console
options		DCONS_FORCE_GDB=1	# force to be the gdb device

#####################################################################
# crypto subsystem
#
# This is a port of the openbsd crypto framework.  Include this when
# configuring IPsec and when you have a h/w crypto device to accelerate
# user applications that link to openssl.
#
# Drivers are ports from openbsd with some simple enhancements that have
# been fed back to openbsd (and hopefully will be included).

pseudo-device	crypto		# core crypto support
pseudo-device	cryptodev	# /dev/crypto for access to h/w

device		rndtest		# FIPS 140-2 entropy tester

device		hifn		# Hifn 7951, 7781, etc.
options		HIFN_DEBUG	# enable debugging support: hw.hifn.debug
#options	HIFN_NO_RNG	# for devices without RNG
options		HIFN_RNDTEST	# enable rndtest support

device		safe		# SafeNet 1141
options 	SAFE_DEBUG	# enable debugging support: hw.safe.debug
#options	SAFE_NO_RNG	# for devices without RNG
options 	SAFE_RNDTEST	# enable rndtest support

device		ubsec		# Broadcom 5501, 5601, 58xx
options		UBSEC_DEBUG	# enable debugging support: hw.ubsec.debug
#options	UBSEC_NO_RNG	# for devices without RNG
options		UBSEC_RNDTEST	# enable rndtest support

device		aesni		# hardware crypto/RNG for AES-NI
device		padlock		# hardware crypto/RNG for VIA C3/C7/Eden

#
# ACPI support using the Intel ACPI Component Architecture reference
# implementation.
#
# ACPI_DEBUG enables the use of the debug.acpi.level and debug.acpi.layer
# kernel environment variables to select initial debugging levels for the
# Intel ACPICA code.
#
# Note that building ACPI into the kernel is deprecated; the module is
# normally loaded automatically by the loader.

device		acpi
options 	ACPI_DEBUG

# ACPI Asus Extras (LCD backlight/brightness, video output, etc.)
device		acpi_asus

# ACPI Fujitsu Extras (Buttons)
device		acpi_fujitsu

# ACPI extras driver for HP laptops
#device		acpi_hp

# ACPI Panasonic Extras (LCD backlight/brightness, video output, etc.)
device		acpi_panasonic

# ACPI Sony extra (LCD brightness)
device		acpi_sony

# ACPI extras driver for ThinkPad laptops
device		acpi_thinkpad

# ACPI Toshiba Extras (LCD backlight/brightness, video output, etc.)
device		acpi_toshiba

# ACPI Video Extensions (LCD backlight/brightness, video output, etc.)
device		acpi_video

device		aibs		# ASUSTeK AI Booster (ACPI ASOC ATK0110)

# DRM options:
# drm:		General DRM code
# i915drm:	Intel i830, i845, i915, i945, i965, G33/35
# mach64drm:	ATI Mach64 cards - Rage and 3D Rage series
# mgadrm:	AGP Matrox G200, G400, G450, G550
# r128drm:	ATI Rage 128 cards
# radeondrm:	ATI Radeon cards
# savagedrm:	Savage cards
# sisdrm:	Sis cards
# tdfxdrm:	3dfx Voodoo 3/4/5 and Banshee
#
# DRM_DEBUG:	include debug printfs, very slow
#
# DRM requires AGP in the kernel.

device		drm
device		"i915drm"
device		"mach64drm"
device		mgadrm
device		"r128drm"
device		radeondrm
device		savagedrm
device		sisdrm
device		tdfxdrm

options 	DRM_DEBUG
options 	DRM_LINUX

#
# Misc devices
#
device		cmx		# Omnikey CardMan 4040 smartcard reader
device		gpio		# Enable support for the gpio framework

#
# Embedded system options:
#
# An embedded system might want to run something other than init.
options 	INIT_PATH="/sbin/init:/sbin/oinit"

# Debug options
options 	BUS_DEBUG       # enable newbus debugging
options		RSS_DEBUG	# enable RSS (Receive Side Scaling) debugging

# Record the program counter of the code interrupted by the statistics
# clock interrupt.  Use pctrack(8) to dump this information.
options		DEBUG_PCTRACK

# More undocumented options for linting.
# Note that documenting these are not considered an affront.

#options	ACPI_NO_SEMAPHORES
options 	AHC_DUMP_EEPROM
#options 	BKTR_ALLOC_PAGES=xxx
options 	CAM_DEBUG_DELAY
options 	CLUSTERDEBUG
#options 	COMPAT_LINUX
options 	COMPAT_SUNOS
options 	DEBUG
options 	DEBUG_CRIT_SECTIONS
options 	DEBUG_INTERRUPTS
#options 	DISABLE_PSE
options		BCE_DEBUG
options		EMX_RSS_DEBUG
options		JME_RSS_DEBUG
#options	ED_NO_MIIBUS
options 	ENABLE_ALART
options 	FB_DEBUG=2
options 	FB_INSTALL_CDEV
#options 	I4B_SMP_WORKAROUND
options 	I586_PMC_GUPROF=0x70000
#options	IEEE80211_DEBUG_REFCNT
options		IEEE80211_SUPPORT_SUPERG
options 	KBDIO_DEBUG=10
options 	KBD_MAXRETRY=4
options 	KBD_MAXWAIT=6
options 	KBD_RESETDELAY=201
#options 	KERN_TIMESTAMP
options 	KEY
#options 	LINPROCFS
options 	LOCKF_DEBUG
#options	MAXFILES=xxx
options		MBUF_DEBUG
options 	PANIC_DEBUG
options 	PMAP_DEBUG
options 	PSM_DEBUG=4
options 	SCSI_NCR_DEBUG
options 	SCSI_NCR_MAX_SYNC=10000
options 	SCSI_NCR_MAX_WIDE=1
options 	SCSI_NCR_MYADDR=7
options 	SHOW_BUSYBUFS	# List buffers that prevent root unmount
options 	SI_DEBUG
options		SLAB_DEBUG
options 	SLIP_IFF_OPTS
options 	SOCKBUF_DEBUG
options		TDMA_BINTVAL_DEFAULT=5
options		TDMA_SLOTCNT_DEFAULT=2
options		TDMA_SLOTLEN_DEFAULT=10*1000
options		TDMA_TXRATE_11A_DEFAULT=2*24
options		TDMA_TXRATE_11B_DEFAULT=2*11
options		TDMA_TXRATE_11G_DEFAULT=2*24
options		TDMA_TXRATE_11NA_DEFAULT="(4|IEEE80211_RATE_MCS)"
options		TDMA_TXRATE_11NG_DEFAULT="(4|IEEE80211_RATE_MCS)"
options		TDMA_TXRATE_HALF_DEFAULT=2*12
options		TDMA_TXRATE_QUARTER_DEFAULT=2*6
options		TDMA_TXRATE_TURBO_DEFAULT=2*24
#options 	TIMER_FREQ="((14318182+6)/12)"
options 	VFS_BIO_DEBUG
options		VM_PAGE_DEBUG
options 	XBONEHACK

options	KTR
options KTR_ALL
options	KTR_ENTRIES=1024
options	KTR_VERBOSE=1
#options KTR_CTXSW
#options KTR_DMCRYPT
#options KTR_ETHERNET
#options KTR_HAMMER
#options KTR_IFQ
#options KTR_IF_BGE
#options KTR_IF_EM
#options KTR_IF_EMX
#options KTR_IF_START
#options KTR_IPIQ
#options KTR_KERNENTRY
#options KTR_MEMORY
#options KTR_POLLING
#options KTR_SERIALIZER
#options KTR_SPIN_CONTENTION
#options KTR_TESTLOG
#options KTR_TOKENS
#options KTR_TSLEEP
#options KTR_USB_MEMORY

# ALTQ
options 	ALTQ		#alternate queueing
options 	ALTQ_CBQ	#class based queueing
options 	ALTQ_RED	#random early detection
options 	ALTQ_RIO	#triple red for diffserv (needs RED)
options 	ALTQ_HFSC	#hierarchical fair service curve
options 	ALTQ_PRIQ	#priority queue
options 	ALTQ_FAIRQ	#fair queue
#options 	ALTQ_NOPCC	#don't use processor cycle counter
options 	ALTQ_DEBUG	#for debugging
# you might want to set kernel timer to 1kHz if you use CBQ,
# especially with 100baseT
#options 	HZ=1000

# SCTP
options		SCTP
options		SCTP_DEBUG
options		SCTP_USE_ADLER32
options		SCTP_HIGH_SPEED
options		SCTP_STAT_LOGGING
options		SCTP_CWND_LOGGING
options		SCTP_BLK_LOGGING
options		SCTP_STR_LOGGING
options		SCTP_FR_LOGGING
options		SCTP_MAP_LOGGING

# DSCHED stuff
options		DSCHED_FQ

# WATCHDOG
options		WATCHDOG_ENABLE		# Enable watchdog support framework
options		WDOG_DISABLE_ON_PANIC	# Automatically disable watchdogs on panic

# LED
options		ERROR_LED_ON_PANIC	# If an error led is present, light it up on panic
