# $FreeBSD: src/sys/conf/options,v 1.191.2.53 2003/06/04 17:56:58 sam Exp $
#
#        On the handling of kernel options
#
# All kernel options should be listed in LINT, with suitable
# descriptions.  Negative options (options that make some code not
# compile) should be commented out; LINT should compile as much code
# as possible.  Try to structure option-using code so that a single
# option only switch code on, or only switch code off, to make it
# possible to have a full compile-test.  If necessary, you can include
# "opt_lint.h" and check for COMPILING_LINT to get maximum code
# coverage.
#
# All new options shall also be listed in either "conf/options" or
# "platform/<platform>/conf/options".  Options that affect a single
# source-file <xxx>.[c|s] should be directed into "opt_<xxx>.h", while
# options that affect multiple files should either go in
# "opt_global.h" if this is a kernel-wide option (used just about
# everywhere), or in "opt_<option-name-in-lower-case>.h" if it affect
# only some files.  Note that the effect of listing only an option
# without a header-file-name in conf/options (and cousins) is that the
# last convention is followed.
#
# This handling scheme is not yet fully implemented.
#
#
# Format of this file:
# Option name	filename
#
# If filename is missing, the default is
# opt_<name-of-option-in-lower-case>.h

# Adaptec Array Controller driver options
AAC_DEBUG		opt_aac.h

# Adaptec aic7xxx SCSI controller options
AHC_ALLOW_MEMIO		opt_aic7xxx.h	# Allow PCI devices to use memory
					# mapped I/O

AHC_TMODE_ENABLE	opt_aic7xxx.h	# Bitmap of units to enable
					# targetmode operations.

AHC_DUMP_EEPROM		opt_aic7xxx.h	# Dump the contents of our
					# configuration prom.

AHC_DEBUG		opt_aic7xxx.h	# Compile in Aic7xxx Debugging code.

AHC_DEBUG_OPTS		opt_aic7xxx.h	# Aic7xxx driver debugging options.
					# See sys/dev/aic7xxx/aic7xxx.h

AHC_REG_PRETTY_PRINT	opt_aic7xxx.h	# Print register bitfields in debug
					# output.  Adds ~15k to driver.

# Adaptec aic79xx SCSI controller options
AHD_DEBUG		opt_aic79xx.h	# Compile in Aic79xx Debugging code.

AHD_DEBUG_OPTS		opt_aic79xx.h	# Aic79xx driver debugging options.
					# See sys/dev/aic7xxx/aic79xx.h

AHD_TMODE_ENABLE	opt_aic79xx.h	# Bitmap of units to enable
					# targetmode operations.

AHD_REG_PRETTY_PRINT	opt_aic79xx.h	# Print register bitfields in debug
					# output.  Adds ~15k to driver.

ADW_ALLOW_MEMIO		opt_adw.h	# Allow PCI devices to use memory
					# mapped I/O
TWA_DEBUG		opt_twa.h

#options for ACPI support
ACPI_DEBUG		opt_acpi.h
ACPI_NO_SEMAPHORES	opt_acpi.h
ACPI_ENABLE_PCI		opt_acpi.h

# Miscellaneous options.
COMPAT_DF12	opt_compatdf12.h
COMPAT_43	opt_compat.h
COMPAT_SUNOS	opt_compat.h
COMPILING_LINT	opt_lint.h
DDB
DDB_TRACE
DDB_UNATTENDED	opt_ddb.h
GDB_REMOTE_CHAT	opt_ddb.h
HW_WDOG
KTRACE
LIBICONV
MD_NSECT	opt_md.h
MD_ROOT		opt_md.h
MD_ROOT_SIZE	opt_md.h
MFI_DEBUG	opt_mfi.h
NSWAPDEV	opt_swap.h
NSWBUF_MIN	opt_swap.h
PPS_SYNC	opt_ntp.h
QUOTA
SUIDDIR		opt_suiddir.h
SYSVMSG		opt_sysvipc.h
SYSVSEM		opt_sysvipc.h
SYSVSHM		opt_sysvipc.h
SHMALL		opt_sysvipc.h
SHMMAX		opt_sysvipc.h
SHMMAXPGS	opt_sysvipc.h
SHMMIN		opt_sysvipc.h
SHMMNI		opt_sysvipc.h
SHMSEG		opt_sysvipc.h
SEMMAP		opt_sysvipc.h
SEMMNI		opt_sysvipc.h
SEMMNS		opt_sysvipc.h
SEMMNU		opt_sysvipc.h
SEMMSL		opt_sysvipc.h
SEMOPM		opt_sysvipc.h
SEMUME		opt_sysvipc.h
MSGMNB		opt_sysvipc.h
MSGMNI		opt_sysvipc.h
MSGSEG		opt_sysvipc.h
MSGSSZ		opt_sysvipc.h
MSGTQL		opt_sysvipc.h
UCONSOLE
ICMP_BANDLIM
SHOW_BUSYBUFS
DIRECTIO	opt_directio.h

# POSIX kernel options
P1003_1B			opt_posix.h
_KPOSIX_PRIORITY_SCHEDULING	opt_posix.h
_KPOSIX_VERSION			opt_posix.h

# Do we want the config file compiled into the kernel?
INCLUDE_CONFIG_FILE	opt_config.h

# Options for static file systems.  These should only be used at config
# time, since the corresponding lkms cannot work if there are any static
# dependencies.  Unusability is enforced by hiding the defines for the
# options in a never-included header.
EXT2FS		opt_dontuse.h
FDESC		opt_dontuse.h
HPFS		opt_dontuse.h
MFS		opt_dontuse.h
MSDOSFS		opt_dontuse.h
NULLFS		opt_dontuse.h
PORTAL		opt_dontuse.h
PROCFS		opt_dontuse.h
SMBFS		opt_dontuse.h
UDF		opt_dontuse.h
NTFS		opt_dontuse.h
#TMPFS		opt_dontuse.h

# These static filesystems has one slightly bogus static dependency in
# sys/platform/.../i386/autoconf.c.  If any of these filesystems are
# statically compiled into the kernel, code for mounting them as root
# filesystems will be enabled - but look below.  Boot-code is purposely
# unavailable for the LKM-based versions.
CD9660
FFS
NFS
NWFS
USERFS
TMPFS
HAMMER

# filesystems and libiconv bridge
CD9660_ICONV	opt_dontuse.h
MSDOSFS_ICONV	opt_dontuse.h
NTFS_ICONV	opt_dontuse.h

# SMB/CIFS requester
NETSMB		opt_netsmb.h
NETSMBCRYPTO	opt_netsmb.h

# If you are following the conditions in the copyright,
# you can enable soft-updates which will speed up a lot of things
# and make the system safer from crashes at the same time.
# otherwise a STUB module will be compiled in.
SOFTUPDATES	opt_ffs.h

# Enable fast hash lookups for large directories on UFS-based filesystems.
UFS_DIRHASH	opt_ufs.h

# The above static dependencies are planned removed, with a
# <filesystem>_ROOT option to control if it usable as root.  This list
# allows these options to be present in config files already (though
# they won't make any difference yet).
FFS_ROOT	opt_ffs.h
NFS_ROOT	opt_nfsroot.h

# The union static file system has bogus static dependencies, so it isn't
# hidden yet.
UNION

# Options used only in subr_param.c.
HZ		opt_param.h
MAXFILES	opt_param.h
NBUF		opt_param.h
NMBCLUSTERS	opt_param.h
NMBUFS		opt_param.h
VM_BCACHE_SIZE_MAX	opt_param.h
VM_SWZONE_SIZE_MAX	opt_param.h
MAXUSERS
DFLDSIZ		opt_param.h
MAXDSIZ		opt_param.h
MAXSSIZ		opt_param.h

# Generic SCSI options.
CAM_MAX_HIGHPOWER	opt_cam.h
CAMDEBUG		opt_cam.h
CAM_DEBUG_DELAY		opt_cam.h
CAM_DEBUG_BUS		opt_cam.h
CAM_DEBUG_TARGET	opt_cam.h
CAM_DEBUG_LUN		opt_cam.h
CAM_DEBUG_FLAGS		opt_cam.h
SCSI_DELAY		opt_scsi.h
SCSI_NO_SENSE_STRINGS	opt_scsi.h
SCSI_NO_OP_STRINGS	opt_scsi.h

# iSCSI options
ISCSI_INITIATOR_DEBUG	opt_iscsi_initiator.h

# Options used only in cam/scsi/scsi_cd.c
CHANGER_MIN_BUSY_SECONDS	opt_cd.h
CHANGER_MAX_BUSY_SECONDS	opt_cd.h

# Options used only in cam/scsi/scsi_sa.c.
SA_IO_TIMEOUT		opt_sa.h
SA_SPACE_TIMEOUT	opt_sa.h
SA_REWIND_TIMEOUT	opt_sa.h
SA_ERASE_TIMEOUT	opt_sa.h
SA_1FM_AT_EOD		opt_sa.h

# Options used only in cam/scsi/scsi_pt.c
SCSI_PT_DEFAULT_TIMEOUT	opt_pt.h

# Options used only in cam/scsi/scsi_ses.c
SES_ENABLE_PASSTHROUGH	opt_ses.h

# Options used in dev/sym/ (Symbios SCSI driver).
SYM_SETUP_LP_PROBE_MAP	opt_sym.h	#-Low Priority Probe Map (bits)
					# Allows the ncr to take precedence
					# 1 (1<<0) -> 810a, 860
					# 2 (1<<1) -> 825a, 875, 885, 895
					# 4 (1<<2) -> 895a, 896, 1510d 
SYM_SETUP_SCSI_DIFF	opt_sym.h	#-HVD support for 825a, 875, 885
					# disabled:0 (default), enabled:1
SYM_SETUP_PCI_PARITY	opt_sym.h	#-PCI parity checking
					# disabled:0, enabled:1 (default)
SYM_SETUP_MAX_LUN	opt_sym.h	#-Number of LUNs supported
					# default:8, range:[1..64]

# Options used only in pci/ncr.c
SCSI_NCR_DEBUG		opt_ncr.h
SCSI_NCR_MAX_SYNC	opt_ncr.h
SCSI_NCR_MAX_WIDE	opt_ncr.h
SCSI_NCR_MYADDR		opt_ncr.h

# Options used only in pci/isp_pci.c
ISP_TARGET_MODE		opt_isp.h

# Options used in the 'ata' ATA/ATAPI driver
ATA_STATIC_ID		opt_ata.h

# Net stuff.
# altq stuff
ALTQ			opt_global.h
ALTQ_CBQ		opt_altq.h
ALTQ_RED		opt_altq.h
ALTQ_RIO		opt_altq.h
ALTQ_HFSC		opt_altq.h
ALTQ_PRIQ		opt_altq.h
ALTQ_FAIRQ		opt_altq.h
ALTQ_NOPCC		opt_altq.h
ALTQ_DEBUG		opt_altq.h

ACCEPT_FILTER_DATA
ACCEPT_FILTER_HTTP
BOOTP			opt_bootp.h
BOOTP_COMPAT		opt_bootp.h
BOOTP_NFSROOT		opt_bootp.h
BOOTP_NFSV3		opt_bootp.h
BOOTP_WIRED_TO		opt_bootp.h
CARP			opt_carp.h
ETHER_II		opt_ef.h
ETHER_8023		opt_ef.h
ETHER_8022		opt_ef.h
ETHER_SNAP		opt_ef.h
MROUTING		opt_mrouting.h
PIM			opt_mrouting.h
INET			opt_inet.h
INET6			opt_inet6.h
IPSEC			opt_ipsec.h
IPSEC_ESP		opt_ipsec.h
IPSEC_DEBUG		opt_ipsec.h
IPSEC_FILTERGIF		opt_ipsec.h
FAST_IPSEC		opt_ipsec.h
IPDIVERT
DUMMYNET		opt_ipdn.h
DUMMYNET_DEBUG		opt_ipdn.h
IPFIREWALL		opt_ipfw.h
IPFIREWALL_DEBUG	opt_ipfw.h
IPFIREWALL_VERBOSE	opt_ipfw.h
IPFIREWALL_VERBOSE_LIMIT	opt_ipfw.h
IPFIREWALL_DEFAULT_TO_ACCEPT	opt_ipfw.h
IPFIREWALL_FORWARD		opt_ipfw.h
IPV6FIREWALL		opt_ip6fw.h
IPV6FIREWALL_VERBOSE	opt_ip6fw.h
IPV6FIREWALL_VERBOSE_LIMIT	opt_ip6fw.h
IPV6FIREWALL_DEFAULT_TO_ACCEPT	opt_ip6fw.h
IPSTEALTH
IPX			opt_ipx.h
IPXIP			opt_ipx.h
IPTUNNEL		opt_ipx.h
LIBMCHAIN
MPLS			opt_mpls.h
NCP			opt_ncp.h
PPP_BSDCOMP		opt_ppp.h
PPP_DEFLATE		opt_ppp.h
PPP_FILTER		opt_ppp.h
SLIP_IFF_OPTS		opt_slip.h
TCPDEBUG
TCP_SIGNATURE		opt_inet.h
TCP_DROP_SYNFIN		opt_tcp_input.h

XBONEHACK
MBUF_STRESS_TEST	opt_mbuf_stress_test.h

# (New netgraph, port still in progress)
#
# Netgraph(4). Use option NETGRAPH7 to enable the base netgraph code.
# Each netgraph node type can be either be compiled into the kernel
# or loaded dynamically. To get the former, include the corresponding
# option below. Each type has its own man page, e.g. ng_async(4).
NETGRAPH7
NETGRAPH7_DEBUG		opt_netgraph.h
NETGRAPH7_ASYNC		opt_netgraph.h
NETGRAPH7_ATMLLC	opt_netgraph.h
NETGRAPH7_ATM_ATMPIF	opt_netgraph.h
NETGRAPH7_BLUETOOTH		opt_netgraph.h
NETGRAPH7_BLUETOOTH_BT3C	opt_netgraph.h
NETGRAPH7_BLUETOOTH_H4		opt_netgraph.h
NETGRAPH7_BLUETOOTH_HCI		opt_netgraph.h
NETGRAPH7_BLUETOOTH_L2CAP	opt_netgraph.h
NETGRAPH7_BLUETOOTH_SOCKET	opt_netgraph.h
NETGRAPH7_BLUETOOTH_UBT		opt_netgraph.h
NETGRAPH7_BLUETOOTH_UBTBCMFW	opt_netgraph.h
NETGRAPH7_BPF		opt_netgraph.h
NETGRAPH7_BRIDGE	opt_netgraph.h
NETGRAPH7_CAR		opt_netgraph.h
NETGRAPH7_CISCO		opt_netgraph.h
NETGRAPH7_DEFLATE	opt_netgraph.h
NETGRAPH7_DEVICE	opt_netgraph.h
NETGRAPH7_ECHO		opt_netgraph.h
NETGRAPH7_EIFACE	opt_netgraph.h
NETGRAPH7_ETHER		opt_netgraph.h
NETGRAPH7_FEC		opt_netgraph.h
NETGRAPH7_FRAME_RELAY	opt_netgraph.h
NETGRAPH7_GIF		opt_netgraph.h
NETGRAPH7_GIF_DEMUX	opt_netgraph.h
NETGRAPH7_HOLE		opt_netgraph.h
NETGRAPH7_IFACE		opt_netgraph.h
NETGRAPH7_IP_INPUT	opt_netgraph.h
NETGRAPH7_IPFW		opt_netgraph.h
NETGRAPH7_KSOCKET	opt_netgraph.h
NETGRAPH7_L2TP		opt_netgraph.h
NETGRAPH7_LMI		opt_netgraph.h
# MPPC compression requires proprietary files (not included)
NETGRAPH7_MPPC_COMPRESSION	opt_netgraph.h
NETGRAPH7_MPPC_ENCRYPTION	opt_netgraph.h
NETGRAPH7_NAT		opt_netgraph.h
NETGRAPH7_NETFLOW	opt_netgraph.h
NETGRAPH7_ONE2MANY	opt_netgraph.h
NETGRAPH7_PPP		opt_netgraph.h
NETGRAPH7_PPPOE		opt_netgraph.h
NETGRAPH7_PPTPGRE	opt_netgraph.h
NETGRAPH7_PRED1		opt_netgraph.h
NETGRAPH7_RFC1490	opt_netgraph.h
NETGRAPH7_SOCKET	opt_netgraph.h
NETGRAPH7_SPLIT		opt_netgraph.h
NETGRAPH7_SPPP		opt_netgraph.h
NETGRAPH7_TAG		opt_netgraph.h
NETGRAPH7_TCPMSS	opt_netgraph.h
NETGRAPH7_TEE		opt_netgraph.h
NETGRAPH7_TTY		opt_netgraph.h
NETGRAPH7_UI		opt_netgraph.h
NETGRAPH7_VJC		opt_netgraph.h

# NgATM options
NGATM7_ATM		opt_netgraph.h
NGATM7_ATMBASE		opt_netgraph.h
NGATM7_SSCOP		opt_netgraph.h
NGATM7_SSCFU		opt_netgraph.h
NGATM7_UNI		opt_netgraph.h
NGATM7_CCATM		opt_netgraph.h

# Netgraph(4). Use option NETGRAPH to enable the base netgraph code.
# Each netgraph node type can be either be compiled into the kernel
# or loaded dynamically. To get the former, include the corresponding
# option below. Each type has its own man page, e.g. ng_async(8).
NETGRAPH
NETGRAPH_ASYNC		opt_netgraph.h
NETGRAPH_BPF		opt_netgraph.h
NETGRAPH_BRIDGE		opt_netgraph.h
NETGRAPH_CISCO		opt_netgraph.h
NETGRAPH_ECHO		opt_netgraph.h
NETGRAPH_EIFACE		opt_netgraph.h
NETGRAPH_ETHER		opt_netgraph.h
NETGRAPH_FRAME_RELAY	opt_netgraph.h
NETGRAPH_HOLE		opt_netgraph.h
NETGRAPH_IFACE		opt_netgraph.h
NETGRAPH_KSOCKET	opt_netgraph.h
NETGRAPH_LMI		opt_netgraph.h
NETGRAPH_L2TP		opt_netgraph.h
# MPPC compression requires proprietary files (not included)
NETGRAPH_MPPC_COMPRESSION	opt_netgraph.h
NETGRAPH_MPPC_ENCRYPTION	opt_netgraph.h
NETGRAPH_ONE2MANY	opt_netgraph.h
NETGRAPH_PPP		opt_netgraph.h
NETGRAPH_PPPOE		opt_netgraph.h
NETGRAPH_PPTPGRE	opt_netgraph.h
NETGRAPH_RFC1490	opt_netgraph.h
NETGRAPH_SOCKET		opt_netgraph.h
NETGRAPH_TEE		opt_netgraph.h
NETGRAPH_TTY		opt_netgraph.h
NETGRAPH_UI		opt_netgraph.h
NETGRAPH_VJC		opt_netgraph.h

# DRM options
DRM_DEBUG		opt_drm.h
DRM_LINUX		opt_drm.h

# ATM (HARP version)
ATM_CORE		opt_atm.h
ATM_IP			opt_atm.h
ATM_SIGPVC		opt_atm.h
ATM_SPANS		opt_atm.h
ATM_UNI			opt_atm.h

# XXX Conflict: # of devices vs network protocol (Native ATM).
# This makes "atm.h" unusable.
NATM			opt_natm.h

# DPT driver debug flags
DPT_MEASURE_PERFORMANCE	opt_dpt.h
DPT_HANDLE_TIMEOUTS	opt_dpt.h
DPT_TIMEOUT_FACTOR	opt_dpt.h
DPT_LOST_IRQ		opt_dpt.h
DPT_RESET_HBA		opt_dpt.h

# Misc debug flags.  Most of these should probably be replaced with
# 'DEBUG', and then let people recompile just the interesting modules
# with 'make CC="cc -DDEBUG"'.
CLUSTERDEBUG		opt_debug_cluster.h
DEBUG_1284		opt_ppb_1284.h
VP0_DEBUG		opt_vpo.h
LPT_DEBUG		opt_lpt.h
PLIP_DEBUG		opt_plip.h
LOCKF_DEBUG		opt_debug_lockf.h
NPX_DEBUG		opt_debug_npx.h
SI_DEBUG		opt_debug_si.h

# Fb options
FB_DEBUG		opt_fb.h
FB_INSTALL_CDEV		opt_fb.h

# ppbus related options
PERIPH_1284		opt_ppb_1284.h
DONTPROBE_1284		opt_ppb_1284.h

# smbus related options
ENABLE_ALART		opt_intpm.h

# These cause changes all over the kernel
BLKDEV_IOSIZE		opt_global.h
DEBUG			opt_global.h
DEBUG_LOCKS		opt_global.h
DEBUG_CRIT_SECTIONS	opt_global.h
DIAGNOSTIC		opt_global.h
INVARIANTS		opt_global.h
VFS_BIO_DEBUG		opt_global.h
DEBUG_INTERRUPTS	opt_global.h
SOCKBUF_DEBUG		opt_global.h
PANIC_DEBUG		opt_global.h
MBUF_DEBUG		opt_global.h
PMAP_DEBUG		opt_global.h
VM_PAGE_DEBUG		opt_global.h
SLAB_DEBUG		opt_global.h

# Sample system/interrupt PC
DEBUG_PCTRACK		opt_pctrack.h

# These are VM related options
NO_SWAPPING		opt_vm.h
PQ_CACHESIZE		opt_vmpage.h

# Standard SMP options
SMP			opt_global.h

# sys/netkey
KEY

# Size of the kernel message buffer
MSGBUF_SIZE		opt_msgbuf.h

# PCI related options
COMPAT_OLDPCI

# NFS options
NFS_MINATTRTIMO		opt_nfs.h
NFS_MAXATTRTIMO		opt_nfs.h
NFS_MINDIRATTRTIMO	opt_nfs.h
NFS_MAXDIRATTRTIMO	opt_nfs.h
NFS_GATHERDELAY		opt_nfs.h
NFS_UIDHASHSIZ		opt_nfs.h
NFS_WDELAYHASHSIZ	opt_nfs.h
NFS_MUIDHASHSIZ		opt_nfs.h
NFS_NOSERVER		opt_nfs.h
NFS_DEBUG		opt_nfs.h

# MSDOSFS options
MSDOSFS_DEBUG		opt_msdosfs.h

# For the Bt848/Bt848A/Bt849/Bt878/Bt879 driver
BROOKTREE_SYSTEM_DEFAULT	opt_bktr.h
BROOKTREE_ALLOC_PAGES		opt_bktr.h
BKTR_OVERRIDE_CARD		opt_bktr.h
BKTR_OVERRIDE_TUNER		opt_bktr.h
BKTR_OVERRIDE_DBX		opt_bktr.h
BKTR_OVERRIDE_MSP		opt_bktr.h
BKTR_SYSTEM_DEFAULT		opt_bktr.h
BKTR_ALLOC_PAGES		opt_bktr.h
BKTR_USE_PLL			opt_bktr.h	
BKTR_GPIO_ACCESS		opt_bktr.h
BKTR_NO_MSP_RESET		opt_bktr.h
BKTR_430_FX_MODE		opt_bktr.h
BKTR_SIS_VIA_MODE		opt_bktr.h
BKTR_NEW_MSP34XX_DRIVER		opt_bktr.h

# Various mi ISA bus flags
COM_ESP			opt_sio.h
COM_MULTIPORT		opt_sio.h
BREAK_TO_DEBUGGER	opt_comconsole.h
ALT_BREAK_TO_DEBUGGER	opt_comconsole.h

# options for bus/device framework
BUS_DEBUG		opt_bus.h

# options for USB support
OHCI_DEBUG		opt_usb.h
USB_DEBUG		opt_usb.h

# Vinum options
VINUMDEBUG		opt_vinum.h

# Embedded system options
UKBD_DFLT_KEYMAP	opt_ukbd.h
INIT_PATH		opt_init_path.h

ROOTDEVNAME		opt_rootdevname.h

FDC_DEBUG		opt_fdc.h
PCFCLOCK_VERBOSE	opt_pcfclock.h
PCFCLOCK_MAX_RETRIES	opt_pcfclock.h

# Polling device handling
DEVICE_POLLING		opt_polling.h

# Network device queue based polling
IFPOLL_ENABLE		opt_ifpoll.h

# options for ubsec driver
UBSEC_DEBUG		opt_ubsec.h
UBSEC_RNDTEST		opt_ubsec.h
UBSEC_NO_RNG		opt_ubsec.h

# options for hifn driver
HIFN_DEBUG		opt_hifn.h
HIFN_RNDTEST		opt_hifn.h
HIFN_NO_RNG		opt_hifn.h

# options for safenet driver
SAFE_DEBUG		opt_safe.h
SAFE_NO_RNG		opt_safe.h
SAFE_RNDTEST		opt_safe.h

# KTR options
KTR				opt_global.h
KTR_ENTRIES			opt_global.h
KTR_ALL				opt_ktr.h
KTR_CTXSW			opt_ktr.h
KTR_DMCRYPT			opt_ktr.h
KTR_DSCHED_BFQ			opt_ktr.h
KTR_ETHERNET			opt_ktr.h
KTR_HAMMER			opt_ktr.h
KTR_IFQ				opt_ktr.h
KTR_IF_BGE			opt_ktr.h
KTR_IF_EM			opt_ktr.h
KTR_IF_EMX			opt_ktr.h
KTR_IF_START			opt_ktr.h
KTR_IPIQ			opt_ktr.h
KTR_KERNENTRY			opt_ktr.h
KTR_MEMORY			opt_ktr.h
KTR_MSGPORT			opt_ktr.h
KTR_POLLING			opt_ktr.h
KTR_SERIALIZER			opt_ktr.h
KTR_SPIN_CONTENTION		opt_ktr.h
KTR_TESTLOG			opt_ktr.h
KTR_TOKENS			opt_ktr.h
KTR_TSLEEP			opt_ktr.h
KTR_USB_MEMORY			opt_ktr.h
KTR_VERBOSE			opt_ktr.h

# options for the Atheros driver
ATH_DEBUG		opt_ath.h
ATH_DIAGAPI		opt_ath.h
ATH_RXBUF		opt_ath.h
ATH_TXBUF		opt_ath.h

# ...and its HAL
AH_SUPPORT_AR5416	opt_ah.h

# bce driver
BCE_DEBUG		opt_bce.h

# ed driver
ED_NO_MIIBUS		opt_ed.h

# emx driver
EMX_RSS_DEBUG		opt_emx.h

# jme driver
JME_RSS_DEBUG		opt_jme.h

# dcons options
DCONS_BUF_SIZE		opt_dcons.h
DCONS_POLL_HZ		opt_dcons.h
DCONS_FORCE_CONSOLE	opt_dcons.h
DCONS_FORCE_GDB		opt_dcons.h

# deprecated drivers and options
I_WANT_DEPRECATED_STUFF	opt_deprecated.h

# SCTP
SCTP			opt_sctp.h
SCTP_DEBUG		opt_sctp.h
SCTP_USE_ADLER32	opt_sctp.h
SCTP_HIGH_SPEED		opt_sctp.h
SCTP_STAT_LOGGING	opt_sctp.h
SCTP_CWND_LOGGING	opt_sctp.h
SCTP_BLK_LOGGING	opt_sctp.h
SCTP_STR_LOGGING	opt_sctp.h
SCTP_FR_LOGGING		opt_sctp.h
SCTP_MAP_LOGGING	opt_sctp.h

# syslink kernel support
#
SYSLINK			opt_syslink.h

# DSCHED stuff
DSCHED_FQ		opt_dsched.h
DSCHED_BFQ		opt_dsched.h

# Receive Side Scaling (now basecode)
RSS_DEBUG		opt_rss.h

# Enable watchdogs
WATCHDOG_ENABLE	opt_cpu.h

# Panic settings
WDOG_DISABLE_ON_PANIC	opt_panic.h
ERROR_LED_ON_PANIC	opt_panic.h

# 802.11 support layer
IEEE80211_DEBUG		opt_wlan.h
IEEE80211_DEBUG_REFCNT	opt_wlan.h
IEEE80211_AMPDU_AGE	opt_wlan.h
IEEE80211_SUPPORT_MESH	opt_wlan.h
IEEE80211_SUPPORT_SUPERG	opt_wlan.h
IEEE80211_SUPPORT_TDMA	opt_wlan.h

# 802.11 TDMA support
TDMA_SLOTLEN_DEFAULT	opt_tdma.h
TDMA_SLOTCNT_DEFAULT	opt_tdma.h
TDMA_BINTVAL_DEFAULT	opt_tdma.h
TDMA_TXRATE_11B_DEFAULT	opt_tdma.h
TDMA_TXRATE_11G_DEFAULT	opt_tdma.h
TDMA_TXRATE_11A_DEFAULT	opt_tdma.h
TDMA_TXRATE_TURBO_DEFAULT	opt_tdma.h
TDMA_TXRATE_HALF_DEFAULT	opt_tdma.h
TDMA_TXRATE_QUARTER_DEFAULT	opt_tdma.h
TDMA_TXRATE_11NA_DEFAULT	opt_tdma.h
TDMA_TXRATE_11NG_DEFAULT	opt_tdma.h

PANIC_REBOOT_WAIT_TIME	opt_panic.h
