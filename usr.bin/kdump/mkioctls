#!/bin/sh
#
# $FreeBSD: src/usr.bin/kdump/mkioctls,v 1.15.2.5 2002/11/15 18:22:31 ru Exp $

set -e

if [ "x$1" = "x-s" ]; then
	use_switch=1
	shift
else
	use_switch=0
fi

if [ -z "$1" ]; then
	echo "usage: sh $0 [-s] include-dir"
	exit 1
fi

LC_ALL=C; export LC_ALL

# Build a list of headers that have ioctls in them.
# XXX should we use an ANSI cpp?
# XXX leave out cam/, fs/, netatalk/, netatm/, netnatm/, netsmb/, nwfs/,
#     and ufs/ because they are fake softlinks
ioctl_includes=`
	cd $1
	find -s * -name '*.h' -follow |
		egrep -v '^(cam/)|^(fs/)|^(netatalk/)|^(netatm/)|^(netnatm/)|^(netsmb/)|^(nwfs/)|^(ufs/)' |
		xargs egrep -l \
'^#[ 	]*define[ 	]+[A-Za-z_][A-Za-z0-9_]*[ 	]+_IO[^a-z0-9_]' |
		awk '{printf("#include <%s>\\\\n", $1)}'
`

awk -v x="$ioctl_includes" 'BEGIN {print x}' |
	gcc -D_KERNEL_STRUCTURES -E -I$1 -dM - |
	awk -v ioctl_includes="$ioctl_includes" -v use_switch="$use_switch" '
BEGIN {
	print "/* XXX obnoxious prerequisites. */"
	print "#define COMPAT_43"
	print "#define _KERNEL_STRUCTURES"
	print "#include <sys/tty.h>"
	print "#include <net/if_arp.h>"
	print "#include <net/route.h>"
	print "#include <netatm/atm.h>"
	print "#include <netatm/atm_if.h>"
	print "#include <netatm/atm_sap.h>"
	print "#include <netatm/atm_sys.h>"
	print "#include <netinet/in.h>"
	print "#include <net/ip_mroute/ip_mroute.h>"
	print "#include <netinet6/nd6.h>"
	print "#include <netinet6/ip6_mroute.h>"
	print "#include <stdio.h>"
	print "#include <cam/cam.h>"
	print ""
	print ioctl_includes
	print "const char *ioctlname(u_long);"
	print ""
	print "const char *"
	print "ioctlname(u_long val)"
	print "{"
	if (use_switch)
		print "\tswitch(val) {"
}

/^#[ 	]*define[ 	]+[A-Za-z_][A-Za-z0-9_]*[ 	]+_IO/ {
	
	# find where the name starts
	for (i = 1; i <= NF; i++)
		if ($i ~ /define/)
			break;
	++i;
	# 
	if (use_switch)
		printf("\tcase %s:\n\t\treturn(\"%s\");\n", $i, $i);
	else
		printf("\tif (val ==  %s)\n\t\treturn(\"%s\");\n", $i, $i);

}
END {
	if (use_switch)
		print "\t}"
	print "\n\treturn(NULL);"
	print "}"
}
'
