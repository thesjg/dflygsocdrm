.\" Copyright (c) 2007 The DragonFly Project.  All rights reserved.
.\"
.\" This code is derived from software contributed to The DragonFly Project
.\" by Simon 'corecode' Schubert <corecode@fs.ei.tum.de>
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\" 3. Neither the name of The DragonFly Project nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific, prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
.\" FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE
.\" COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING,
.\" BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
.\" AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
.\" OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
.\" OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $DragonFly: src/lib/libc/sys/lwp_kill.2,v 1.2 2007/03/16 22:02:02 swildner Exp $
.\"
.Dd March 12, 2007
.Dt LWP_KILL 2
.Os
.Sh NAME
.Nm lwp_kill
.Nd send signal to a lwp
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/types.h
.In signal.h
.Ft int
.Fn lwp_kill "pid_t pid" "lwpid_t tid" "int sig"
.Sh DESCRIPTION
The
.Fn lwp_kill
function sends the signal
.Fa sig
to the lwp specified by
.Fa pid
and
.Fa tid .
If
.Fa pid
is -1, the signal will be sent to the current process.
Permission checking and signal behavior is exactly like in
.Xr kill 2 .
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Fn Lwp_kill
will fail and no signal will be sent if:
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa sig
is not a valid signal number.
.It Bq Er ESRCH
no lwp corresponding to
.Fa pid
and
.Fa tid
can be found.
.It Bq Er EPERM
the sending process is not the super-user and its effective
user id does not match the effective user-id of the receiving process.
.El
.Sh SEE ALSO
.Xr kill 2 ,
.Xr lwp_create 2 ,
.Xr raise 3
.Sh HISTORY
The
.Fn lwp_kill
function first appeared in
.Dx 1.9 .
