# This is included explicitly at the top of each sub-Makefile.  We can't
# use the normal "Makefile.inc" mechanism, because we need some of these
# definitions before the sub-Makefile is processed.

TARGET_ARCH?=	${MACHINE_ARCH}
BINUTIL_ARCH=	${TARGET_ARCH}

# RELTOP is the relative path to this point in the source or object
# tree, from any subdirectory of same.  It gets extra "../" prefixes
# added to it as we descend into subdirectories.
RELTOP:= ..

RELSRC=	${RELTOP}/../../../contrib/binutils-2.21
SRCDIR=	${.CURDIR}/${RELSRC}

CFLAGS+= -I.
.if exists(${.CURDIR}/${BINUTIL_ARCH})
CFLAGS+= -I${.CURDIR}/${BINUTIL_ARCH}
.endif
CFLAGS+= -I${.CURDIR}
CFLAGS+= -I${.CURDIR}/${RELTOP}/libbfd/${BINUTIL_ARCH}
CFLAGS+= -I${SRCDIR}/include

DPADD=	${RELTOP}/libbinutils/libbinutils.a
LDADD=	${RELTOP}/libbinutils/libbinutils.a
DPADD+=	${RELTOP}/libbfd/libbfd.a
LDADD+=	${RELTOP}/libbfd/libbfd.a
DPADD+=	${RELTOP}/libiberty/libiberty.a
LDADD+=	${RELTOP}/libiberty/libiberty.a

DPADD+=	${LIBZ}
LDADD+=	-lz

.if exists(${.CURDIR}/${BINUTIL_ARCH})
.PATH: ${.CURDIR}/${BINUTIL_ARCH}
.endif

ARCHS=	${BINUTIL_ARCH}

.for _arch in ${CROSS_ARCH}
.if (${ARCHS:R:M${_arch:R}} == "")
ARCHS+= $(_arch)
.endif
.endfor

.for _arch in ${ARCHS}
.if exists(${.CURDIR}/Makefile.${_arch})
.include "${.CURDIR}/Makefile.${_arch}"
.endif
.endfor
